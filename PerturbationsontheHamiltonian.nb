(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    255248,       5170]
NotebookOptionsPosition[    252767,       5122]
NotebookOutlinePosition[    253364,       5144]
CellTagsIndexPosition[    253321,       5141]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Code", " ", "by", " ", "Aurora", " ", "Colter", " ", "with", " ", 
    "Kallan", " ", "Berglund"}], " ", "*)"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.9149257395022755`*^9, 3.9149257637910323`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"695ac5a5-6a53-43d7-a057-588ecde75d3e"],

Cell[CellGroupData[{

Cell["Setup Final Calculation", "Section",
 CellChangeTimes->{{3.9149257898265524`*^9, 
  3.914925799849257*^9}},ExpressionUUID->"54efe981-f035-440b-a520-\
17ef66d1947f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Implementing", " ", "the", " ", "isotropy", " ", "condition"}], 
    ",", " ", 
    RowBox[{"staticity", " ", "condition"}], ",", " ", 
    RowBox[{"combining", " ", "Hamiltonian", " ", "modifications"}], ",", " ", 
    RowBox[{
    "calculating", " ", "the", " ", "equation", " ", "of", " ", "motion"}], 
    ",", " ", 
    RowBox[{"etc", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "All", " ", "Equations", " ", "referenced", " ", "are", " ", "from", " ", 
    "paper", " ", "draft"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.914925802851139*^9, 3.9149259079383163`*^9}, {
  3.9200464280117087`*^9, 3.920046439630743*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"764ee7be-e0fd-43a0-b8ad-c15b819ddf83"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"isotropy", " ", "conditions", 
    RowBox[{"(", "19", ")"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["\[Phi]", "1"], "[", "x", "]"}], "=", 
     RowBox[{"x", "*", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[Phi]", "2"], "[", "x", "]"}], "/", "2"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox[
       SubscriptBox["\[Phi]", "1"], "\[Prime]",
       MultilineFunction->None], "[", "x", "]"}], " ", "=", " ", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{
        SubscriptBox["\[Phi]", "1"], "[", "x", "]"}], ",", "x"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox[
       SubscriptBox["\[Phi]", "1"], "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "x", "]"}], "=", " ", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         SubscriptBox["\[Phi]", "1"], "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}], ",", "x"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Original", " ", "H", " ", "divided", " ", "through", " ", "by", " ", 
     RowBox[{"N", "[", "x", "]"}], " ", 
     RowBox[{"(", "8", ")"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["H", "integrand1"], "=", 
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{
          SubscriptBox["\[Phi]", "2"], "[", "x", "]"}], "*", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             SubscriptBox["p", "2"], "[", "x", "]"}], "^", "2"}], "/", "2"}], 
          "/", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            SubscriptBox["\[Phi]", "1"], "[", "x", "]"}], "]"}]}]}], "+", 
        RowBox[{"2", 
         RowBox[{"Sqrt", "[", 
          RowBox[{
           SubscriptBox["\[Phi]", "1"], "[", "x", "]"}], "]"}], "*", 
         RowBox[{
          SubscriptBox["p", "1"], "[", "x", "]"}], "*", 
         RowBox[{
          SubscriptBox["p", "2"], "[", "x", "]"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"D", "[", 
               RowBox[{
                RowBox[{
                 SubscriptBox["\[Phi]", "1"], "[", "x", "]"}], ",", "x"}], 
               "]"}], "/", 
              RowBox[{
               SubscriptBox["\[Phi]", "2"], "[", "x", "]"}]}], ")"}], "^", 
            "2"}]}], ")"}], 
         RowBox[{
          RowBox[{
           RowBox[{
            SubscriptBox["\[Phi]", "2"], "[", "x", "]"}], "/", "2"}], "/", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            SubscriptBox["\[Phi]", "1"], "[", "x", "]"}], "]"}]}]}], "-", 
        RowBox[{"2", "*", 
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"D", "[", 
             RowBox[{
              RowBox[{
               SubscriptBox["\[Phi]", "1"], "[", "x", "]"}], ",", "x"}], 
             "]"}], "/", 
            RowBox[{
             SubscriptBox["\[Phi]", "2"], "[", "x", "]"}]}], ",", "x"}], 
          "]"}], "*", 
         RowBox[{"Sqrt", "[", 
          RowBox[{
           SubscriptBox["\[Phi]", "1"], "[", "x", "]"}], "]"}]}]}], ")"}]}]}],
     ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"static", " ", "background", " ", "solution", " ", "conditions"}],
     "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["p", "1"], "[", "x", "]"}], "=", "0"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["p", "2"], "[", "x", "]"}], "=", "0"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["p", "3"], "[", "x", "]"}], "=", "0"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Integrand", " ", "of", " ", 
     RowBox[{"H", "[", "N", "]"}], " ", "incorporating", " ", "perturbations",
      " ", "on", " ", "N", " ", "and", " ", "phi2", " ", 
     RowBox[{"(", "67", ")"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["H", "new1"], "=", " ", 
     RowBox[{"Collect", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{
              SubscriptBox["n", 
               RowBox[{"(", "0", ")"}]], "[", "x", "]"}], "+"}], "*)"}], 
           RowBox[{"\[Delta]n", "[", "x", "]"}], ")"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"D", "[", 
              RowBox[{
               SubscriptBox["H", "integrand1"], ",", " ", 
               RowBox[{
                SubscriptBox["\[Phi]", "2"], "[", "x", "]"}]}], "]"}], "*", 
             RowBox[{
              SubscriptBox["\[Delta]\[Phi]", "2"], "[", "x", "]"}]}], "+", 
            RowBox[{
             RowBox[{"D", "[", 
              RowBox[{
               SubscriptBox["H", "integrand1"], ",", " ", 
               RowBox[{
                SuperscriptBox[
                 SubscriptBox["\[Phi]", "2"], "\[Prime]",
                 MultilineFunction->None], "[", "x", "]"}]}], "]"}], "*", 
             RowBox[{
              SuperscriptBox[
               SubscriptBox["\[Delta]\[Phi]", "2"], "\[Prime]",
               MultilineFunction->None], "[", "x", "]"}]}], "+", 
            RowBox[{
             RowBox[{"D", "[", 
              RowBox[{
               SubscriptBox["H", "integrand1"], ",", " ", 
               RowBox[{
                SuperscriptBox[
                 SubscriptBox["\[Phi]", "2"], "\[Prime]\[Prime]",
                 MultilineFunction->None], "[", "x", "]"}]}], "]"}], "*", 
             RowBox[{
              SuperscriptBox[
               SubscriptBox["\[Delta]\[Phi]", "2"], "\[Prime]\[Prime]",
               MultilineFunction->None], "[", "x", "]"}]}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{
           SubscriptBox["n", 
            RowBox[{"(", "0", ")"}]], "[", "x", "]"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             FractionBox["1", "2"], 
             RowBox[{"D", "[", 
              RowBox[{
               SubscriptBox["H", "integrand1"], ",", " ", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  SubscriptBox["\[Phi]", "2"], "[", "x", "]"}], ",", "2"}], 
                "}"}]}], "]"}], "*", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                SubscriptBox["\[Delta]\[Phi]", "2"], "[", "x", "]"}], ")"}], 
              "2"]}], "+", 
            RowBox[{
             RowBox[{"D", "[", 
              RowBox[{
               RowBox[{"D", "[", 
                RowBox[{
                 SubscriptBox["H", "integrand1"], ",", 
                 RowBox[{
                  SubscriptBox["\[Phi]", "2"], "[", "x", "]"}]}], "]"}], ",", 
               RowBox[{
                SuperscriptBox[
                 SubscriptBox["\[Phi]", "2"], "\[Prime]",
                 MultilineFunction->None], "[", "x", "]"}]}], "]"}], "*", 
             RowBox[{
              SubscriptBox["\[Delta]\[Phi]", "2"], "[", "x", "]"}], "*", 
             RowBox[{
              SuperscriptBox[
               SubscriptBox["\[Delta]\[Phi]", "2"], "\[Prime]",
               MultilineFunction->None], "[", "x", "]"}]}], "+", 
            RowBox[{
             FractionBox["1", "2"], 
             RowBox[{"D", "[", 
              RowBox[{
               SubscriptBox["H", "integrand1"], ",", " ", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  SuperscriptBox[
                   SubscriptBox["\[Phi]", "2"], "\[Prime]",
                   MultilineFunction->None], "[", "x", "]"}], ",", "2"}], 
                "}"}]}], "]"}], "*", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox[
                 SubscriptBox["\[Delta]\[Phi]", "2"], "\[Prime]",
                 MultilineFunction->None], "[", "x", "]"}], ")"}], "2"]}], 
            "+", 
            RowBox[{
             RowBox[{"D", "[", 
              RowBox[{
               RowBox[{"D", "[", 
                RowBox[{
                 SubscriptBox["H", "integrand1"], ",", 
                 RowBox[{
                  SubscriptBox["\[Phi]", "2"], "[", "x", "]"}]}], "]"}], ",", 
               RowBox[{
                SuperscriptBox[
                 SubscriptBox["\[Phi]", "2"], "\[Prime]\[Prime]",
                 MultilineFunction->None], "[", "x", "]"}]}], "]"}], "*", 
             RowBox[{
              SubscriptBox["\[Delta]\[Phi]", "2"], "[", "x", "]"}], "*", 
             RowBox[{
              SuperscriptBox[
               SubscriptBox["\[Delta]\[Phi]", "2"], "\[Prime]\[Prime]",
               MultilineFunction->None], "[", "x", "]"}]}]}], ")"}]}]}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{
            SubscriptBox["\[Phi]", "2"], "[", "x", "]"}], "->", 
           RowBox[{
            SubscriptBox["\[Phi]", "20"], "[", "x", "]"}]}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{
             SubscriptBox["\[Phi]", "2"], "'"}], "[", "x", "]"}], "->", 
           RowBox[{
            RowBox[{
             SubscriptBox["\[Phi]", "20"], "'"}], "[", "x", "]"}]}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{
             SubscriptBox["\[Phi]", "2"], "''"}], "[", "x", "]"}], "->", 
           RowBox[{
            RowBox[{
             SubscriptBox["\[Phi]", "20"], "''"}], "[", "x", "]"}]}]}], 
         "}"}]}], ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          SubscriptBox["n", 
           RowBox[{"(", "0", ")"}]], "[", "x", "]"}], ",", " ", 
         RowBox[{"\[Delta]n", "[", "x", "]"}]}], "}"}], ",", " ", 
       "Simplify"}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.9110468803041964`*^9, 3.911046901810769*^9}, {
   3.911046966356682*^9, 3.911047035143406*^9}, {3.911047104585437*^9, 
   3.911047214887398*^9}, {3.911047264446641*^9, 3.911047295689248*^9}, {
   3.911047328981434*^9, 3.911047371328944*^9}, 3.911047408655591*^9, {
   3.911047448361475*^9, 3.911047574738527*^9}, {3.911047615308941*^9, 
   3.91104778135209*^9}, {3.911048080881273*^9, 3.911048215038288*^9}, 
   3.9110483343451014`*^9, {3.9110483967772264`*^9, 3.9110483993562107`*^9}, {
   3.911048464813962*^9, 3.9110484765989866`*^9}, {3.911048542707253*^9, 
   3.911048560706174*^9}, {3.9110490603668537`*^9, 3.91104907585713*^9}, {
   3.911049128859497*^9, 3.9110491362511578`*^9}, {3.911049282492257*^9, 
   3.911049299548486*^9}, {3.9110498595638266`*^9, 3.9110498642671647`*^9}, {
   3.911049946666661*^9, 3.911049955368104*^9}, {3.911050078970833*^9, 
   3.911050090473481*^9}, {3.9110501620037823`*^9, 3.9110501918825197`*^9}, 
   3.911993669836623*^9, {3.91200067971674*^9, 3.912000682503233*^9}, {
   3.91200463680571*^9, 3.912004697842045*^9}, {3.9121683024857335`*^9, 
   3.912168304128505*^9}, 3.9156192251347747`*^9, {3.9174291683268204`*^9, 
   3.917429224152532*^9}, 3.9200437609636483`*^9, {3.920043885363706*^9, 
   3.9200439016571264`*^9}, {3.9200450410954943`*^9, 
   3.9200451093813725`*^9}, {3.9202847073380985`*^9, 
   3.9202847077001295`*^9}, {3.922201591924078*^9, 3.9222016007836885`*^9}, 
   3.92220189461686*^9},
 CellLabel->"In[3]:=",ExpressionUUID->"f7225d3d-83bc-4258-8507-71b494b1bae4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Original", " ", "Solution", " ", "of", " ", 
    SubscriptBox["H", "2"], " ", "divided", " ", "through", " ", "by", " ", 
    RowBox[{"N", "[", "x", "]"}], " ", 
    RowBox[{"(", "50", ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"see", " ", "QuantumCorrectionIsoCoord", " ", "Document"}], 
     ")"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["H", "integrand2"], "=", 
     RowBox[{"-", " ", 
      RowBox[{"(", 
       RowBox[{
        FractionBox[
         RowBox[{"3", " ", 
          SuperscriptBox[
           RowBox[{
            SubscriptBox["p", "3"], "[", "x", "]"}], "2"], " ", 
          SqrtBox[
           RowBox[{"x", " ", 
            RowBox[{
             SubscriptBox["\[Phi]", "2"], "[", "x", "]"}]}]]}], 
         RowBox[{
          SqrtBox["2"], " ", "x"}]], "+", 
        FractionBox[
         RowBox[{"3", " ", 
          RowBox[{"U", "[", "x", "]"}], " ", 
          SqrtBox[
           RowBox[{"x", " ", 
            RowBox[{
             SubscriptBox["\[Phi]", "2"], "[", "x", "]"}]}]]}], 
         RowBox[{
          SqrtBox["2"], " ", "x", " ", 
          SuperscriptBox[
           RowBox[{
            SubscriptBox["\[Phi]", "3"], "[", "x", "]"}], "2"]}]], "+", 
        FractionBox[
         RowBox[{"3", " ", 
          RowBox[{
           SubscriptBox["p", "2"], "[", "x", "]"}], " ", 
          RowBox[{
           SubscriptBox["p", "3"], "[", "x", "]"}], " ", 
          SqrtBox[
           RowBox[{"x", " ", 
            RowBox[{
             SubscriptBox["\[Phi]", "2"], "[", "x", "]"}]}]], " ", 
          RowBox[{
           SubscriptBox["\[Phi]", "3"], "[", "x", "]"}]}], 
         RowBox[{
          SqrtBox["2"], " ", "x", " ", 
          RowBox[{
           SubscriptBox["\[Phi]", "2"], "[", "x", "]"}]}]], "-", 
        FractionBox[
         RowBox[{"3", " ", 
          SuperscriptBox[
           RowBox[{
            SubscriptBox["p", "2"], "[", "x", "]"}], "2"], " ", 
          SqrtBox[
           RowBox[{"x", " ", 
            RowBox[{
             SubscriptBox["\[Phi]", "2"], "[", "x", "]"}]}]], " ", 
          SuperscriptBox[
           RowBox[{
            SubscriptBox["\[Phi]", "3"], "[", "x", "]"}], "2"]}], 
         RowBox[{"8", " ", 
          SqrtBox["2"], " ", "x", " ", 
          SuperscriptBox[
           RowBox[{
            SubscriptBox["\[Phi]", "2"], "[", "x", "]"}], "2"]}]], "+", 
        FractionBox[
         RowBox[{"45", " ", "x", " ", 
          SqrtBox[
           RowBox[{"x", " ", 
            RowBox[{
             SubscriptBox["\[Phi]", "2"], "[", "x", "]"}]}]], " ", 
          SuperscriptBox[
           RowBox[{
            SubscriptBox["\[Phi]", "3"], "[", "x", "]"}], "2"], " ", 
          SuperscriptBox[
           RowBox[{
            SuperscriptBox[
             SubscriptBox["\[Phi]", "2"], "\[Prime]",
             MultilineFunction->None], "[", "x", "]"}], "2"]}], 
         RowBox[{"32", " ", 
          SqrtBox["2"], " ", 
          SuperscriptBox[
           RowBox[{
            SubscriptBox["\[Phi]", "2"], "[", "x", "]"}], "4"]}]], "+", 
        RowBox[{
         FractionBox["1", 
          SuperscriptBox[
           RowBox[{
            SubscriptBox["\[Phi]", "2"], "[", "x", "]"}], "3"]], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            FractionBox[
             RowBox[{"9", " ", "x", " ", 
              SqrtBox[
               RowBox[{"x", " ", 
                RowBox[{
                 SubscriptBox["\[Phi]", "2"], "[", "x", "]"}]}]], " ", 
              RowBox[{
               SubscriptBox["\[Phi]", "3"], "[", "x", "]"}], " ", 
              RowBox[{
               SuperscriptBox[
                SubscriptBox["\[Phi]", "2"], "\[Prime]",
                MultilineFunction->None], "[", "x", "]"}], " ", 
              RowBox[{
               SuperscriptBox[
                SubscriptBox["\[Phi]", "3"], "\[Prime]",
                MultilineFunction->None], "[", "x", "]"}]}], 
             RowBox[{"4", " ", 
              SqrtBox["2"]}]]}], "+", 
           RowBox[{
            SuperscriptBox[
             RowBox[{
              SubscriptBox["\[Phi]", "3"], "[", "x", "]"}], "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{"9", " ", 
                 SqrtBox[
                  RowBox[{"x", " ", 
                   RowBox[{
                    SubscriptBox["\[Phi]", "2"], "[", "x", "]"}]}]], " ", 
                 RowBox[{
                  SuperscriptBox[
                   SubscriptBox["\[Phi]", "2"], "\[Prime]",
                   MultilineFunction->None], "[", "x", "]"}]}], 
                RowBox[{"16", " ", 
                 SqrtBox["2"]}]]}], "-", 
              FractionBox[
               RowBox[{"3", " ", "x", " ", 
                SqrtBox[
                 RowBox[{"x", " ", 
                  RowBox[{
                   SubscriptBox["\[Phi]", "2"], "[", "x", "]"}]}]], " ", 
                RowBox[{
                 SuperscriptBox[
                  SubscriptBox["\[Phi]", "2"], "\[Prime]\[Prime]",
                  MultilineFunction->None], "[", "x", "]"}]}], 
               RowBox[{"8", " ", 
                SqrtBox["2"]}]]}], ")"}]}]}], ")"}]}], "+", 
        RowBox[{
         FractionBox["1", 
          SuperscriptBox[
           RowBox[{
            SubscriptBox["\[Phi]", "2"], "[", "x", "]"}], "2"]], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            FractionBox[
             RowBox[{"3", " ", 
              SqrtBox[
               RowBox[{"x", " ", 
                RowBox[{
                 SubscriptBox["\[Phi]", "2"], "[", "x", "]"}]}]], " ", 
              SuperscriptBox[
               RowBox[{
                SubscriptBox["\[Phi]", "3"], "[", "x", "]"}], "2"]}], 
             RowBox[{"32", " ", 
              SqrtBox["2"], " ", "x"}]]}], "+", 
           FractionBox[
            RowBox[{"3", " ", "x", " ", 
             SqrtBox[
              RowBox[{"x", " ", 
               RowBox[{
                SubscriptBox["\[Phi]", "2"], "[", "x", "]"}]}]], " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox[
                SubscriptBox["\[Phi]", "3"], "\[Prime]",
                MultilineFunction->None], "[", "x", "]"}], "2"]}], 
            RowBox[{"4", " ", 
             SqrtBox["2"]}]], "+", 
           FractionBox[
            RowBox[{
             SqrtBox[
              RowBox[{"x", " ", 
               RowBox[{
                SubscriptBox["\[Phi]", "2"], "[", "x", "]"}]}]], " ", 
             RowBox[{
              SubscriptBox["\[Phi]", "3"], "[", "x", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"3", " ", 
                RowBox[{
                 SuperscriptBox[
                  SubscriptBox["\[Phi]", "3"], "\[Prime]",
                  MultilineFunction->None], "[", "x", "]"}]}], "+", 
               RowBox[{"2", " ", "x", " ", 
                RowBox[{
                 SuperscriptBox[
                  SubscriptBox["\[Phi]", "3"], "\[Prime]\[Prime]",
                  MultilineFunction->None], "[", "x", "]"}]}]}], ")"}]}], 
            RowBox[{"4", " ", 
             SqrtBox["2"]}]]}], ")"}]}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Apply", " ", "perturbations", " ", "to", " ", 
     SubscriptBox["H", "2"], " ", "by", " ", "plugging", " ", "into", " ", 
     "67"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["H", "new2"], "=", 
     RowBox[{"Collect", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["n", 
              RowBox[{"(", "0", ")"}]], "[", "x", "]"}], ")"}], "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"D", "[", 
               RowBox[{
                SubscriptBox["H", "integrand2"], ",", " ", 
                RowBox[{
                 SubscriptBox["\[Phi]", "2"], "[", "x", "]"}]}], "]"}], "*", 
              RowBox[{
               SubscriptBox["\[Delta]\[Phi]", "2"], "[", "x", "]"}]}], "+", 
             RowBox[{
              RowBox[{"D", "[", 
               RowBox[{
                SubscriptBox["H", "integrand2"], ",", " ", 
                RowBox[{
                 SuperscriptBox[
                  SubscriptBox["\[Phi]", "2"], "\[Prime]",
                  MultilineFunction->None], "[", "x", "]"}]}], "]"}], "*", 
              RowBox[{
               SuperscriptBox[
                SubscriptBox["\[Delta]\[Phi]", "2"], "\[Prime]",
                MultilineFunction->None], "[", "x", "]"}]}], "+", 
             RowBox[{
              RowBox[{"D", "[", 
               RowBox[{
                SubscriptBox["H", "integrand2"], ",", " ", 
                RowBox[{
                 SuperscriptBox[
                  SubscriptBox["\[Phi]", "2"], "\[Prime]\[Prime]",
                  MultilineFunction->None], "[", "x", "]"}]}], "]"}], "*", 
              RowBox[{
               SuperscriptBox[
                SubscriptBox["\[Delta]\[Phi]", "2"], "\[Prime]\[Prime]",
                MultilineFunction->None], "[", "x", "]"}]}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{
            SubscriptBox["n", 
             RowBox[{"(", "0", ")"}]], "[", "x", "]"}], "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              FractionBox["1", "2"], 
              RowBox[{"D", "[", 
               RowBox[{
                SubscriptBox["H", "integrand2"], ",", " ", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   SubscriptBox["\[Phi]", "2"], "[", "x", "]"}], ",", "2"}], 
                 "}"}]}], "]"}], "*", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 SubscriptBox["\[Delta]\[Phi]", "2"], "[", "x", "]"}], ")"}], 
               "2"]}], "+", 
             RowBox[{
              RowBox[{"D", "[", 
               RowBox[{
                RowBox[{"D", "[", 
                 RowBox[{
                  SubscriptBox["H", "integrand2"], ",", 
                  RowBox[{
                   SubscriptBox["\[Phi]", "2"], "[", "x", "]"}]}], "]"}], ",", 
                RowBox[{
                 SuperscriptBox[
                  SubscriptBox["\[Phi]", "2"], "\[Prime]",
                  MultilineFunction->None], "[", "x", "]"}]}], "]"}], "*", 
              RowBox[{
               SubscriptBox["\[Delta]\[Phi]", "2"], "[", "x", "]"}], "*", 
              RowBox[{
               SuperscriptBox[
                SubscriptBox["\[Delta]\[Phi]", "2"], "\[Prime]",
                MultilineFunction->None], "[", "x", "]"}]}], "+", 
             RowBox[{
              FractionBox["1", "2"], 
              RowBox[{"D", "[", 
               RowBox[{
                SubscriptBox["H", "integrand2"], ",", " ", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   SuperscriptBox[
                    SubscriptBox["\[Phi]", "2"], "\[Prime]",
                    MultilineFunction->None], "[", "x", "]"}], ",", "2"}], 
                 "}"}]}], "]"}], "*", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 SuperscriptBox[
                  SubscriptBox["\[Delta]\[Phi]", "2"], "\[Prime]",
                  MultilineFunction->None], "[", "x", "]"}], ")"}], "2"]}], 
             "+", 
             RowBox[{
              RowBox[{"D", "[", 
               RowBox[{
                RowBox[{"D", "[", 
                 RowBox[{
                  SubscriptBox["H", "integrand2"], ",", 
                  RowBox[{
                   SubscriptBox["\[Phi]", "2"], "[", "x", "]"}]}], "]"}], ",", 
                RowBox[{
                 SuperscriptBox[
                  SubscriptBox["\[Phi]", "2"], "\[Prime]\[Prime]",
                  MultilineFunction->None], "[", "x", "]"}]}], "]"}], "*", 
              RowBox[{
               SubscriptBox["\[Delta]\[Phi]", "2"], "[", "x", "]"}], "*", 
              RowBox[{
               SuperscriptBox[
                SubscriptBox["\[Delta]\[Phi]", "2"], "\[Prime]\[Prime]",
                MultilineFunction->None], "[", "x", "]"}]}]}], ")"}]}]}], 
         ")"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{
            SubscriptBox["\[Phi]", "2"], "[", "x", "]"}], "->", 
           RowBox[{
            SubscriptBox["\[Phi]", "20"], "[", "x", "]"}]}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{
             SubscriptBox["\[Phi]", "2"], "'"}], "[", "x", "]"}], "->", 
           RowBox[{
            RowBox[{
             SubscriptBox["\[Phi]", "20"], "'"}], "[", "x", "]"}]}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{
             SubscriptBox["\[Phi]", "2"], "''"}], "[", "x", "]"}], "->", 
           RowBox[{
            RowBox[{
             SubscriptBox["\[Phi]", "20"], "''"}], "[", "x", "]"}]}]}], 
         "}"}]}], ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          SubscriptBox["n", 
           RowBox[{"(", "0", ")"}]], "[", "x", "]"}], ",", " ", 
         RowBox[{"\[Delta]n", "[", "x", "]"}]}], "}"}], ",", " ", 
       "Simplify"}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.911993519175324*^9, 3.911993526260764*^9}, {
   3.911993659668645*^9, 3.911993686980815*^9}, {3.9119937337161803`*^9, 
   3.9119937608785353`*^9}, 3.911993872669194*^9, 3.9119947761888466`*^9, {
   3.9119948969958057`*^9, 3.9119949230393143`*^9}, {3.9119990356001353`*^9, 
   3.9119990369243555`*^9}, {3.912004568406831*^9, 3.9120046238390226`*^9}, {
   3.9121683194701815`*^9, 3.9121683255117407`*^9}, 3.912168380513096*^9, {
   3.912178105952856*^9, 3.9121781739873223`*^9}, {3.9121782199470286`*^9, 
   3.9121782643261023`*^9}, 3.9174292350393314`*^9, {3.9200451418849564`*^9, 
   3.920045142364421*^9}, {3.920045181711206*^9, 3.920045194605448*^9}, {
   3.9200452275265665`*^9, 3.9200452619311275`*^9}, {3.920284700246307*^9, 
   3.9202847005547333`*^9}, 3.922201903238182*^9},
 CellLabel->"In[11]:=",ExpressionUUID->"90c8c492-c377-4a2b-8c26-a1f03303d30f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Hbar", " ", "calculation"}], ",", " ", 
    RowBox[{"(", "64", ")"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["H", "bar"], "=", 
     RowBox[{"Collect", "[", 
      RowBox[{
       RowBox[{
        SubscriptBox["H", "new1"], "+", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["H", "integrand2"], "/.", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              SubscriptBox["\[Phi]", "2"], "[", "x", "]"}], "->", 
             RowBox[{
              SubscriptBox["\[Phi]", "20"], "[", "x", "]"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{
               SubscriptBox["\[Phi]", "2"], "'"}], "[", "x", "]"}], "->", 
             RowBox[{
              RowBox[{
               SubscriptBox["\[Phi]", "20"], "'"}], "[", "x", "]"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{
               SubscriptBox["\[Phi]", "2"], "''"}], "[", "x", "]"}], "->", 
             RowBox[{
              RowBox[{
               SubscriptBox["\[Phi]", "20"], "''"}], "[", "x", "]"}]}]}], 
           "}"}]}], ")"}]}], ",", " ", 
       RowBox[{"{", " ", 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           SubscriptBox["\[Delta]\[Phi]", "20"], "\[Prime]",
           MultilineFunction->None], "[", "x", "]"}], ",", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Delta]\[Phi]", "20"], "''"}], "[", "x", "]"}]}], 
        "}"}], ",", " ", "Simplify"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Momentum", " ", "time", " ", "derivative", " ", "equation", " ", "in", 
     " ", "terms", " ", "of", " ", "new", " ", "H", " ", "bar", " ", 
     RowBox[{"(", "72", ")"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["H", "obar"], "=", 
     SubscriptBox["H", "integrand1"]}], 
    RowBox[{"(*", 
     RowBox[{"+", 
      SubscriptBox["H", "integrand2"]}], "*)"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pdot2", "=", " ", 
     RowBox[{"Collect", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"D", "[", 
                  RowBox[{
                   SubscriptBox["H", "obar"], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    SubscriptBox["\[Phi]", "2"], "[", "x", "]"}], ",", "2"}], 
                    "}"}]}], "]"}], "-", 
                 RowBox[{"D", "[", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"D", "[", 
                    RowBox[{
                    RowBox[{"D", "[", 
                    RowBox[{
                    SubscriptBox["H", "obar"], ",", 
                    RowBox[{
                    SubscriptBox["\[Phi]", "2"], "[", "x", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{
                    RowBox[{
                    SubscriptBox["\[Phi]", "2"], "'"}], "[", "x", "]"}]}], 
                    "]"}], ")"}], ",", "x"}], "]"}], "-", 
                 RowBox[{"D", "[", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"D", "[", 
                    RowBox[{
                    RowBox[{"D", "[", 
                    RowBox[{
                    SubscriptBox["H", "obar"], ",", 
                    RowBox[{
                    SubscriptBox["\[Phi]", "2"], "[", "x", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{
                    RowBox[{
                    SubscriptBox["\[Phi]", "2"], "''"}], "[", "x", "]"}]}], 
                    "]"}], ")"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"x", ",", "2"}], "}"}]}], "]"}]}], ")"}], "*", 
               RowBox[{
                SubscriptBox["\[Delta]\[Phi]", "2"], "[", "x", "]"}]}], "-", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"D", "[", 
                  RowBox[{
                   RowBox[{"D", "[", 
                    RowBox[{
                    SubscriptBox["H", "obar"], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    SubscriptBox["\[Phi]", "2"], "'"}], "[", "x", "]"}], ",", 
                    "2"}], "}"}]}], "]"}], ",", "x"}], "]"}], "+", 
                 RowBox[{"2", 
                  RowBox[{"(", 
                   RowBox[{"D", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"D", "[", 
                    RowBox[{
                    RowBox[{"D", "[", 
                    RowBox[{
                    SubscriptBox["H", "obar"], ",", 
                    RowBox[{
                    SubscriptBox["\[Phi]", "2"], "[", "x", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{
                    RowBox[{
                    SubscriptBox["\[Phi]", "2"], "''"}], "[", "x", "]"}]}], 
                    "]"}], ")"}], ",", "x"}], "]"}], ")"}]}]}], ")"}], "*", 
               RowBox[{
                RowBox[{
                 SubscriptBox["\[Delta]\[Phi]", "2"], "'"}], "[", "x", 
                "]"}]}], "-", 
              RowBox[{
               RowBox[{"D", "[", 
                RowBox[{
                 SubscriptBox["H", "obar"], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    SubscriptBox["\[Phi]", "2"], "'"}], "[", "x", "]"}], ",", 
                   "2"}], "}"}]}], "]"}], "*", 
               RowBox[{
                RowBox[{
                 SubscriptBox["\[Delta]\[Phi]", "2"], "''"}], "[", "x", 
                "]"}]}]}], ")"}]}], "*", 
           RowBox[{
            SubscriptBox["n", "0"], "[", "x", "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"D", "[", 
                 RowBox[{
                  RowBox[{"D", "[", 
                   RowBox[{
                    SubscriptBox["H", "obar"], ",", 
                    RowBox[{
                    SubscriptBox["\[Phi]", "2"], "[", "x", "]"}]}], "]"}], 
                  ",", 
                  RowBox[{
                   RowBox[{
                    SubscriptBox["\[Phi]", "2"], "'"}], "[", "x", "]"}]}], 
                 "]"}], "-", 
                RowBox[{"2", "*", 
                 RowBox[{"D", "[", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"D", "[", 
                    RowBox[{
                    RowBox[{"D", "[", 
                    RowBox[{
                    SubscriptBox["H", "obar"], ",", 
                    RowBox[{
                    SubscriptBox["\[Phi]", "2"], "[", "x", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{
                    RowBox[{
                    SubscriptBox["\[Phi]", "2"], "''"}], "[", "x", "]"}]}], 
                    "]"}], ")"}], ",", "x"}], "]"}]}]}], ")"}], "*", 
              RowBox[{
               SubscriptBox["\[Delta]\[Phi]", "2"], "[", "x", "]"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"D", "[", 
                 RowBox[{
                  SubscriptBox["H", "obar"], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    SubscriptBox["\[Phi]", "2"], "'"}], "[", "x", "]"}], ",", 
                    "2"}], "}"}]}], "]"}], "-", 
                RowBox[{"2", "*", 
                 RowBox[{"(", 
                  RowBox[{"D", "[", 
                   RowBox[{
                    RowBox[{"D", "[", 
                    RowBox[{
                    SubscriptBox["H", "obar"], ",", 
                    RowBox[{
                    SubscriptBox["\[Phi]", "2"], "[", "x", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{
                    RowBox[{
                    SubscriptBox["\[Phi]", "2"], "''"}], "[", "x", "]"}]}], 
                   "]"}], ")"}]}]}], ")"}], "*", 
              RowBox[{
               RowBox[{
                SubscriptBox["\[Delta]\[Phi]", "2"], "'"}], "[", "x", 
               "]"}]}]}], ")"}], "*", 
           RowBox[{
            RowBox[{
             SubscriptBox["n", "0"], "'"}], "[", "x", "]"}]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"D", "[", 
             RowBox[{
              RowBox[{"D", "[", 
               RowBox[{
                SubscriptBox["H", "obar"], ",", 
                RowBox[{
                 SubscriptBox["\[Phi]", "2"], "[", "x", "]"}]}], "]"}], ",", 
              RowBox[{
               RowBox[{
                SubscriptBox["\[Phi]", "2"], "''"}], "[", "x", "]"}]}], "]"}],
             ")"}], "*", 
           RowBox[{
            SubscriptBox["\[Delta]\[Phi]", "2"], "[", "x", "]"}], "*", 
           RowBox[{
            RowBox[{
             SubscriptBox["n", "0"], "''"}], "[", "x", "]"}]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"D", "[", 
              RowBox[{
               SubscriptBox["H", "obar"], ",", 
               RowBox[{
                SubscriptBox["\[Phi]", "2"], "[", "x", "]"}]}], "]"}], "-", 
             RowBox[{"D", "[", 
              RowBox[{
               RowBox[{"D", "[", 
                RowBox[{
                 SubscriptBox["H", "obar"], ",", 
                 RowBox[{
                  RowBox[{
                   SubscriptBox["\[Phi]", "2"], "'"}], "[", "x", "]"}]}], 
                "]"}], ",", "x"}], "]"}], "+", 
             RowBox[{"D", "[", 
              RowBox[{
               RowBox[{"D", "[", 
                RowBox[{
                 SubscriptBox["H", "obar"], ",", 
                 RowBox[{
                  RowBox[{
                   SubscriptBox["\[Phi]", "2"], "''"}], "[", "x", "]"}]}], 
                "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"x", ",", "2"}], "}"}]}], "]"}]}], ")"}], "*", 
           RowBox[{"\[Delta]n", "[", "x", "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"D", "[", 
              RowBox[{
               SubscriptBox["H", "obar"], ",", 
               RowBox[{
                RowBox[{
                 SubscriptBox["\[Phi]", "2"], "'"}], "[", "x", "]"}]}], "]"}],
              "-", 
             RowBox[{"2", "*", 
              RowBox[{"D", "[", 
               RowBox[{
                RowBox[{"D", "[", 
                 RowBox[{
                  SubscriptBox["H", "obar"], ",", 
                  RowBox[{
                   RowBox[{
                    SubscriptBox["\[Phi]", "2"], "''"}], "[", "x", "]"}]}], 
                 "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"x", ",", "2"}], "}"}]}], "]"}]}]}], ")"}], "*", 
           RowBox[{
            RowBox[{"\[Delta]n", "'"}], "[", "x", "]"}]}], "-", 
          RowBox[{
           RowBox[{"D", "[", 
            RowBox[{
             SubscriptBox["H", "obar"], ",", 
             RowBox[{
              RowBox[{
               SubscriptBox["\[Phi]", "2"], "''"}], "[", "x", "]"}]}], "]"}], 
           "*", 
           RowBox[{
            RowBox[{"\[Delta]n", "''"}], "[", "x", "]"}]}]}], ")"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{
            SubscriptBox["\[Phi]", "2"], "[", "x", "]"}], "->", 
           RowBox[{
            SubscriptBox["\[Phi]", "20"], "[", "x", "]"}]}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{
             SubscriptBox["\[Phi]", "2"], "'"}], "[", "x", "]"}], "->", 
           RowBox[{
            RowBox[{
             SubscriptBox["\[Phi]", "20"], "'"}], "[", "x", "]"}]}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{
             SubscriptBox["\[Phi]", "2"], "''"}], "[", "x", "]"}], "->", 
           RowBox[{
            RowBox[{
             SubscriptBox["\[Phi]", "20"], "''"}], "[", "x", "]"}]}]}], 
         "}"}]}], ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          SubscriptBox["n", "0"], "[", "x", "]"}], ",", " ", 
         RowBox[{
          SuperscriptBox[
           SubscriptBox["n", "0"], "\[Prime]",
           MultilineFunction->None], "[", "x", "]"}], " ", ",", " ", 
         RowBox[{
          SuperscriptBox[
           SubscriptBox["n", "0"], "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "x", "]"}], " ", ",", 
         RowBox[{"\[Delta]n", "[", "x", "]"}]}], "}"}], ",", " ", 
       "Simplify"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.9119939965638485`*^9, 3.911994046325017*^9}, {
   3.911994185427843*^9, 3.911994208379434*^9}, {3.911994508340949*^9, 
   3.9119945944223137`*^9}, {3.911994631903994*^9, 3.91199467958853*^9}, {
   3.912004767164912*^9, 3.9120047720238543`*^9}, {3.915546916805543*^9, 
   3.9155469325868187`*^9}, 3.9156219811656303`*^9, {3.9171062302875233`*^9, 
   3.9171062433239*^9}, {3.9171063242441483`*^9, 3.917106324660185*^9}, {
   3.917106397510996*^9, 3.9171064015455112`*^9}, {3.9171066887805543`*^9, 
   3.9171067054010324`*^9}, {3.917106740386236*^9, 3.9171067606369*^9}, {
   3.9171070405146294`*^9, 3.9171070524172325`*^9}, {3.917107175926038*^9, 
   3.917107229220608*^9}, 3.9171073337214456`*^9, {3.917107719675577*^9, 
   3.917107740385947*^9}, 3.91736027060431*^9, {3.917360848028605*^9, 
   3.9173608519005256`*^9}, {3.917361196051114*^9, 3.9173612631775737`*^9}, {
   3.917361298170918*^9, 3.9173613005757694`*^9}, {3.9173618414270105`*^9, 
   3.91736185463875*^9}, {3.917362502401095*^9, 3.917362505181018*^9}, {
   3.917429243872046*^9, 3.917429257456211*^9}, {3.917429296275359*^9, 
   3.917429328952384*^9}, {3.91779496444423*^9, 3.9177949950727854`*^9}, {
   3.9177950391593657`*^9, 3.9177951789736166`*^9}, {3.917795345573745*^9, 
   3.917795348972662*^9}, {3.917797004559805*^9, 3.917797020969245*^9}, {
   3.917797060701352*^9, 3.917797076861448*^9}, {3.917797370620055*^9, 
   3.917797405143644*^9}, {3.917797527876728*^9, 3.9177975315374184`*^9}, {
   3.9179492866496706`*^9, 3.9179494048442106`*^9}, {3.917949452892832*^9, 
   3.917949611421424*^9}, {3.917949675356216*^9, 3.917949762497149*^9}, {
   3.917949851747125*^9, 3.917949902378866*^9}, {3.9179499672863984`*^9, 
   3.917950064323821*^9}, 3.917950133708767*^9, {3.9179501703748765`*^9, 
   3.9179501704795966`*^9}, {3.917950365083009*^9, 3.91795036925519*^9}, {
   3.9179509454979644`*^9, 3.9179509627497125`*^9}, {3.9179510638283553`*^9, 
   3.917951125287091*^9}, {3.917957666999798*^9, 3.917957667398703*^9}, {
   3.917957705146185*^9, 3.917957705401743*^9}, {3.917957750784191*^9, 
   3.91795777258567*^9}, {3.9179578065399685`*^9, 3.9179578116116896`*^9}, {
   3.917957858680852*^9, 3.9179578889836426`*^9}, {3.917957931773649*^9, 
   3.917958138159716*^9}, {3.917958197095998*^9, 3.917958260859246*^9}, {
   3.9179585429451656`*^9, 3.9179585735217423`*^9}, {3.9180306295306683`*^9, 
   3.918030676677369*^9}, {3.918030752135474*^9, 3.9180307689459276`*^9}, {
   3.918031089132575*^9, 3.91803114407753*^9}, 3.9200453206086254`*^9, {
   3.9200453910377555`*^9, 3.920045582259762*^9}, {3.9200466114216614`*^9, 
   3.9200466595934625`*^9}, {3.920046742652856*^9, 3.920046764140503*^9}, {
   3.920046903315796*^9, 3.920046906185919*^9}, {3.9200470684943886`*^9, 
   3.920047070534786*^9}, 3.9202374785580716`*^9, {3.9202375748248177`*^9, 
   3.920237583307128*^9}, {3.9202801441396685`*^9, 3.920280150548664*^9}, {
   3.9202802934903545`*^9, 3.920280295750467*^9}, {3.920280633845538*^9, 
   3.9202806390913568`*^9}, {3.9202811411913548`*^9, 
   3.9202811452327843`*^9}, {3.9202836999915853`*^9, 
   3.9202837064860687`*^9}, {3.9202846774245496`*^9, 3.920284677520274*^9}, {
   3.9202847550749474`*^9, 3.920284766788965*^9}, {3.920285080877096*^9, 
   3.920285086403573*^9}, {3.9203646339065714`*^9, 3.9203646372239437`*^9}, {
   3.920366095566671*^9, 3.92036609985972*^9}, {3.9203845640409575`*^9, 
   3.920384565813238*^9}, {3.920384930691703*^9, 3.9203849339188814`*^9}, {
   3.920385498270637*^9, 3.920385500642913*^9}, {3.920385695782378*^9, 
   3.9203857002636595`*^9}, {3.920385921205352*^9, 3.920385923379571*^9}, {
   3.920458462063148*^9, 3.9204584650946846`*^9}, {3.920458520773741*^9, 
   3.920458539831156*^9}, {3.922201906141172*^9, 3.922201911430936*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"f43c6670-db8c-465a-8419-9b6d033d9626"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"phi3soln", "=", 
     RowBox[{"const", "*", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        FractionBox[
         RowBox[{"3", "b"}], "x"], "+", 
        FractionBox[
         RowBox[{"3", 
          SuperscriptBox["b", "2"]}], 
         SuperscriptBox["x", "2"]]}], ")"}]}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"(", "56", ")"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"phi20soln", "=", 
     RowBox[{"(", 
      RowBox[{"2", "*", "x", "*", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          FractionBox["b", "x"]}], ")"}], "4"]}], ")"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"(", "19", ")"}], ",", 
     RowBox[{"(", "23", ")"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"N0soln", "=", 
     FractionBox[
      RowBox[{"x", "-", "b"}], 
      RowBox[{"x", "+", "b"}]]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"(", "32", ")"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "replacement", " ", "list", " ", "for", " ", "background", " ", 
      "solutions", " ", "and", " ", "their", " ", "derivatives"}], ",", " ", 
     RowBox[{"to", " ", "be", " ", "called", " ", "later"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"bgsolnlist", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["\[Phi]", "3"], "[", "x", "]"}], "->", "phi3soln"}], 
       ",", " ", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          SubscriptBox["\[Phi]", "3"], "\[Prime]",
          MultilineFunction->None], "[", "x", "]"}], "->", 
        RowBox[{"D", "[", 
         RowBox[{"phi3soln", ",", "x"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          SubscriptBox["\[Phi]", "3"], "\[Prime]\[Prime]",
          MultilineFunction->None], "[", "x", "]"}], "->", 
        RowBox[{"D", "[", 
         RowBox[{"phi3soln", ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "2"}], "}"}]}], "]"}]}], ",", 
       RowBox[{
        RowBox[{
         SubscriptBox["\[Phi]", "20"], "[", "x", "]"}], "->", 
        RowBox[{"(", "phi20soln", ")"}]}], ",", " ", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          SubscriptBox["\[Phi]", "20"], "\[Prime]",
          MultilineFunction->None], "[", "x", "]"}], "->", 
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"(", "phi20soln", ")"}], ",", "x"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          SubscriptBox["\[Phi]", "20"], "\[Prime]\[Prime]",
          MultilineFunction->None], "[", "x", "]"}], "->", 
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"(", "phi20soln", ")"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "2"}], "}"}]}], "]"}]}], ",", 
       RowBox[{
        RowBox[{
         SubscriptBox["n", "0"], "[", "x", "]"}], "->", "N0soln"}], ",", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          SubscriptBox["n", "0"], "\[Prime]",
          MultilineFunction->None], "[", "x", "]"}], "->", 
        RowBox[{"D", "[", 
         RowBox[{"N0soln", ",", "x"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          SubscriptBox["n", "0"], "\[Prime]\[Prime]",
          MultilineFunction->None], "[", "x", "]"}], "->", 
        RowBox[{"D", "[", 
         RowBox[{"N0soln", ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "2"}], "}"}]}], "]"}]}]}], "}"}]}], ";"}], " ", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Hbar", " ", "with", " ", "phi3"}], ",", " ", "phi20", ",", " ", 
     RowBox[{"and", " ", 
      SubscriptBox["N", "0"], "  ", "solution", " ", "applied"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["H", "barbackgroud"], "=", 
     RowBox[{
      RowBox[{"Collect", "[", 
       RowBox[{
        RowBox[{
         SubscriptBox["H", "bar"], "/.", "bgsolnlist"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Delta]\[Phi]", "2"], "[", "x", "]"}], ",", 
          RowBox[{
           SuperscriptBox[
            SubscriptBox["\[Delta]\[Phi]", "2"], "\[Prime]",
            MultilineFunction->None], "[", "x", "]"}], ",", " ", 
          RowBox[{
           SuperscriptBox[
            SubscriptBox["\[Delta]\[Phi]", "2"], "\[Prime]\[Prime]",
            MultilineFunction->None], "[", "x", "]"}], ",", " ", 
          RowBox[{"\[Delta]n", "[", "x", "]"}], ",", 
          RowBox[{
           SuperscriptBox["\[Delta]n", "\[Prime]",
            MultilineFunction->None], "[", "x", "]"}], ",", 
          RowBox[{
           SuperscriptBox["\[Delta]n", "\[Prime]\[Prime]",
            MultilineFunction->None], "[", "x", "]"}]}], "}"}], ",", " ", 
        "Simplify"}], "]"}], "//", "Expand"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"pdot2", " ", "with", " ", "phi3"}], ",", " ", "phi20", ",", " ", 
     RowBox[{"and", " ", 
      SubscriptBox["N", "0"], " ", "solution", " ", "applied"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["pdot2", "background"], "=", 
     RowBox[{
      RowBox[{"Collect", "[", 
       RowBox[{
        RowBox[{"pdot2", " ", "/.", "bgsolnlist"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           SubscriptBox["\[Delta]\[Phi]", "2"], "[", "x", "]"}], ",", 
          RowBox[{
           SuperscriptBox[
            SubscriptBox["\[Delta]\[Phi]", "2"], "\[Prime]",
            MultilineFunction->None], "[", "x", "]"}], ",", " ", 
          RowBox[{
           SuperscriptBox[
            SubscriptBox["\[Delta]\[Phi]", "2"], "\[Prime]\[Prime]",
            MultilineFunction->None], "[", "x", "]"}], ",", " ", 
          RowBox[{"\[Delta]n", "[", "x", "]"}], ",", 
          RowBox[{
           SuperscriptBox["\[Delta]n", "\[Prime]",
            MultilineFunction->None], "[", "x", "]"}], ",", 
          RowBox[{
           SuperscriptBox["\[Delta]n", "\[Prime]\[Prime]",
            MultilineFunction->None], "[", "x", "]"}]}], "}"}], ",", " ", 
        "Simplify"}], "]"}], "//", "Expand"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.911995226731642*^9, 3.9119952790737233`*^9}, {
   3.9119953277246113`*^9, 3.9119954336371202`*^9}, {3.911995570590426*^9, 
   3.9119955742471027`*^9}, {3.911995668278415*^9, 3.9119958985035048`*^9}, {
   3.912000537080923*^9, 3.912000625658886*^9}, {3.9120007194899216`*^9, 
   3.9120007777765875`*^9}, {3.912000868332836*^9, 3.9120008950599127`*^9}, {
   3.912001061026232*^9, 3.9120010718448105`*^9}, {3.9120011022312202`*^9, 
   3.912001118341777*^9}, {3.912003162132784*^9, 3.9120032137793703`*^9}, {
   3.912004790438349*^9, 3.9120048133160644`*^9}, {3.912173990579957*^9, 
   3.91217400934379*^9}, {3.9121765268691516`*^9, 3.912176530201266*^9}, {
   3.9155469572253265`*^9, 3.915546996745721*^9}, {3.9155470337449827`*^9, 
   3.915547053874462*^9}, {3.915621990696878*^9, 3.915621994917552*^9}, {
   3.9171069239216957`*^9, 3.9171069382850523`*^9}, {3.9173624122591043`*^9, 
   3.917362417636387*^9}, {3.9173627321806917`*^9, 3.9173627666151114`*^9}, {
   3.91736361794594*^9, 3.9173636256707993`*^9}, {3.917429346080323*^9, 
   3.9174293692522917`*^9}, {3.917700224339294*^9, 3.917700336033766*^9}, {
   3.917700499226288*^9, 3.917700501124674*^9}, {3.917797268209896*^9, 
   3.9177973126246195`*^9}, 3.917797448775484*^9, 3.9177975826900744`*^9, {
   3.9179586201085663`*^9, 3.9179586269799657`*^9}, {3.920044892757815*^9, 
   3.920044954887655*^9}, {3.9200450238812857`*^9, 3.920045035029295*^9}, {
   3.9200455972568884`*^9, 3.920045812593704*^9}, {3.9200473421668415`*^9, 
   3.920047380562379*^9}, {3.9202817962103696`*^9, 3.920281822897689*^9}, {
   3.9202818699344606`*^9, 3.9202818737170043`*^9}, {3.920281910103333*^9, 
   3.9202819927470226`*^9}, {3.9202846554625564`*^9, 
   3.9202846591527147`*^9}, {3.922201918126623*^9, 3.9222019225745797`*^9}, {
   3.9222025224658012`*^9, 3.922202544083799*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"cead4098-dbda-4a89-84d1-6848a99889bd"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Collecting terms by powers of y", "Section",
 CellChangeTimes->{{3.9149254550087724`*^9, 
  3.914925484309752*^9}},ExpressionUUID->"d25ab0ae-02d3-401d-ada7-\
dc4cc9dfe9be"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"In", " ", "the", " ", "set", " ", "up"}], ",", " ", 
    RowBox[{"implemented", " ", "the", " ", "isotropy", " ", "condition"}], 
    ",", " ", 
    RowBox[{"staticity", " ", "condition"}], ",", " ", 
    RowBox[{"combined", " ", "Hamiltonian", " ", "modifications"}], ",", " ", 
    RowBox[{
    "calculated", " ", "the", " ", "equation", " ", "of", " ", "motion"}], 
    ",", " ", 
    RowBox[{"etc", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Here", ",", " ", 
    RowBox[{
    "we", " ", "take", " ", "the", " ", "Hamiltonian", " ", "and", " ", 
     "p2dot", " ", "equations", " ", "from", " ", "the", " ", "setup", " ", 
     "and", " ", "implement", " ", "the", " ", "asymptotic", " ", 
     "expansions", " ", "of", " ", "deltaphi2", " ", "and", " ", "deltaN"}], 
    ",", " ", 
    RowBox[{
    "taylor", " ", "expand", " ", "the", " ", "resulting", " ", "equation", 
     " ", "as", " ", "x", " ", "approaches", " ", "infinity"}], ",", " ", 
    RowBox[{"then", " ", "plug", " ", "in", " ", 
     RowBox[{"b", "/", "y"}], " ", "for", " ", "x"}], ",", " ", 
    RowBox[{
    "grouping", " ", "the", " ", "equations", " ", "in", " ", "terms", " ", 
     "of", " ", 
     RowBox[{"y", "."}]}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.9149254952550097`*^9, 3.9149255818675156`*^9}, {
  3.9149256175224895`*^9, 3.914925719507304*^9}, {3.9149259484238625`*^9, 
  3.914925949945243*^9}, {3.91492602520123*^9, 3.9149261188736014`*^9}, {
  3.9149491863575964`*^9, 3.914949212142375*^9}, {3.9149492988708253`*^9, 
  3.914949383239002*^9}, {3.9149496410197315`*^9, 3.9149497356691055`*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"ff8fd6f0-e533-40d6-b5fb-fa35823d39f3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Using", " ", "power", " ", "series", " ", "for", " ", "the", " ", 
     "delta", " ", "terms"}], ",", " ", 
    RowBox[{"cs", " ", "and", " ", "ds", " ", "are", " ", "constants"}]}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"deltaphi2sol", "=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"x", "*", 
        SubscriptBox["c", "0"]}], "+", 
       SubscriptBox["c", "1"], "+", 
       RowBox[{
        SubscriptBox["c", "2"], "/", "x"}], "+", 
       RowBox[{
        SubscriptBox["c", "3"], "/", 
        SuperscriptBox["x", "2"]}]}], 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"+", 
         SubscriptBox["c", "4"]}], "/", 
        SuperscriptBox["x", "3"]}], "*)"}], ")"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"deltaNsol", "=", 
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["d", "0"], "+", 
       RowBox[{
        SubscriptBox["d", "1"], "/", "x"}], "+", 
       RowBox[{
        SubscriptBox["d", "2"], "/", 
        SuperscriptBox["x", "2"]}], "+", 
       RowBox[{
        SubscriptBox["d", "3"], "/", 
        SuperscriptBox["x", "3"]}]}], 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"+", 
         SubscriptBox["d", "4"]}], "/", 
        SuperscriptBox["x", "4"]}], "*)"}], ")"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "Solution", " ", "list", " ", "of", " ", "the", " ", "delta", " ", 
      "terms", " ", "and", " ", "their", " ", "derivatives"}], ",", " ", 
     RowBox[{
     "to", " ", "be", " ", "used", " ", "with", " ", "background", " ", 
      "solutions", " ", "calculated", " ", "above"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"solnlist", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["\[Delta]\[Phi]", "2"], "[", "x", "]"}], "->", 
        "deltaphi2sol"}], ",", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          SubscriptBox["\[Delta]\[Phi]", "2"], "\[Prime]",
          MultilineFunction->None], "[", "x", "]"}], "->", 
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"(", "deltaphi2sol", ")"}], ",", "x"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          SubscriptBox["\[Delta]\[Phi]", "2"], "\[Prime]\[Prime]",
          MultilineFunction->None], "[", "x", "]"}], "->", 
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"(", "deltaphi2sol", ")"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "2"}], "}"}]}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"\[Delta]n", "[", "x", "]"}], "->", 
        RowBox[{"(", "deltaNsol", ")"}]}], ",", 
       RowBox[{
        RowBox[{
         SuperscriptBox["\[Delta]n", "\[Prime]",
          MultilineFunction->None], "[", "x", "]"}], "->", 
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"(", "deltaNsol", ")"}], ",", "x"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{
         SuperscriptBox["\[Delta]n", "\[Prime]\[Prime]",
          MultilineFunction->None], "[", "x", "]"}], "->", 
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"(", "deltaNsol", ")"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "2"}], "}"}]}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"U", "[", "x", "]"}], "->", 
        RowBox[{
         SubscriptBox["u", "0"], "/", "x"}]}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "Series", " ", "expansion", " ", "of", " ", "H", " ", "and", " ", 
      "p2dot", " ", "background", " ", "equations", " ", "with", " ", "delta",
       " ", "term", " ", "solutions", " ", "applied"}], ",", " ", 
     RowBox[{"x", " ", "is", " ", "then", " ", "subsituted", " ", "for", " ", 
      RowBox[{"b", "/", "y"}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["H", "sol"], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"Collect", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Series", "[", 
             RowBox[{
              RowBox[{
               SubscriptBox["H", "barbackgroud"], " ", "/.", "solnlist"}], 
              " ", ",", 
              RowBox[{"{", 
               RowBox[{"x", ",", "Infinity", ",", "4"}], "}"}]}], "]"}], "//",
             "Normal"}], ")"}], ")"}], ",", 
         RowBox[{"{", "x", "}"}], ",", "Simplify"}], "]"}], "/.", 
       RowBox[{"{", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
           SubscriptBox["c", "0"], "->", "0"}], ","}], "*)"}], 
        RowBox[{
         SubscriptBox["d", "0"], " ", "->", "0"}], 
        RowBox[{"(*", 
         RowBox[{
          SubscriptBox["d", "1"], "->", "0"}], "*)"}], "}"}]}], " ", "//", 
      "Expand"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     SubscriptBox["pdot2", "sol"], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"Collect", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Series", "[", 
             RowBox[{
              RowBox[{
               SubscriptBox["pdot2", "background"], "/.", " ", "solnlist"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{"x", ",", "Infinity", ",", "4"}], "}"}]}], "]"}], "//",
             "Normal"}], ")"}], ")"}], ",", 
         RowBox[{"{", "x", "}"}], ",", "Simplify"}], "]"}], "/.", 
       RowBox[{"{", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
           SubscriptBox["c", "0"], "->", "0"}], ","}], "*)"}], 
        RowBox[{
         SubscriptBox["d", "0"], " ", "->", "0"}], 
        RowBox[{"(*", 
         RowBox[{",", 
          RowBox[{
           SubscriptBox["d", "1"], "->", "0"}]}], "*)"}], "}"}]}], " ", "//", 
      "Expand"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    SubscriptBox["H", "solve"], "=", 
    RowBox[{"Collect", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         SubscriptBox["H", "sol"], ")"}], "/.", 
        RowBox[{"x", "->", 
         RowBox[{"b", "/", "y"}]}]}], ")"}], ",", 
      RowBox[{"{", "y", "}"}]}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    SubscriptBox["pdot2", "solve"], "=", 
    RowBox[{"Collect", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         SubscriptBox["pdot2", "sol"], ")"}], "/.", 
        RowBox[{"x", "->", 
         RowBox[{"b", "/", "y"}]}]}], ")"}], ",", 
      RowBox[{"{", "y", "}"}]}], "]"}]}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.912000855815873*^9, 3.9120008586184173`*^9}, {
   3.9120009089874477`*^9, 3.912000952582467*^9}, {3.91200130813208*^9, 
   3.9120013198332553`*^9}, {3.912001366882239*^9, 3.912001497930193*^9}, {
   3.9120015749584455`*^9, 3.9120015761050487`*^9}, {3.912001791785884*^9, 
   3.9120017938573074`*^9}, {3.912002663194607*^9, 3.9120027035950637`*^9}, {
   3.912002744162372*^9, 3.9120028869710727`*^9}, {3.9120031027254343`*^9, 
   3.9120031236445904`*^9}, {3.9120032302686086`*^9, 3.9120033583188295`*^9}, 
   3.912003397289313*^9, {3.9120034473841662`*^9, 3.9120034589825525`*^9}, {
   3.9120042004409313`*^9, 3.9120042205044184`*^9}, {3.9120044789640875`*^9, 
   3.9120045380469437`*^9}, {3.9120814310693045`*^9, 3.912081446674573*^9}, {
   3.9120814825938063`*^9, 3.912081530008711*^9}, {3.9120815663506207`*^9, 
   3.912081567271965*^9}, {3.91208163490198*^9, 3.9120816892739987`*^9}, {
   3.912081727732271*^9, 3.912081728362436*^9}, {3.9120818517966146`*^9, 
   3.9120818519323416`*^9}, {3.9120818849617414`*^9, 3.912081925679988*^9}, {
   3.9121684277276225`*^9, 3.912168463261731*^9}, {3.912170879553612*^9, 
   3.9121708952706785`*^9}, {3.9149467189668694`*^9, 3.914946738623454*^9}, {
   3.9149467732778435`*^9, 3.9149467769047832`*^9}, {3.914946887893886*^9, 
   3.914946923564459*^9}, {3.914946958142395*^9, 3.91494703797622*^9}, {
   3.914947175046267*^9, 3.9149471774946527`*^9}, {3.9149473809316998`*^9, 
   3.914947395571969*^9}, {3.9149475474733167`*^9, 3.9149476057484894`*^9}, {
   3.914947767965702*^9, 3.914947787495803*^9}, {3.914947842493085*^9, 
   3.9149478604925804`*^9}, {3.914947890550703*^9, 3.9149479528767304`*^9}, {
   3.9149480133921604`*^9, 3.914948083669444*^9}, {3.9149493866976104`*^9, 
   3.91494939779239*^9}, 3.9149498289823656`*^9, {3.9150225160279875`*^9, 
   3.9150225589853554`*^9}, {3.9155470763423004`*^9, 
   3.9155471417528257`*^9}, {3.9155482664436483`*^9, 3.91554826700375*^9}, {
   3.915548534207399*^9, 3.915548534536684*^9}, {3.9156192895770826`*^9, 
   3.915619361429633*^9}, {3.917107891122596*^9, 3.9171079362782593`*^9}, {
   3.917429635436375*^9, 3.917429680215723*^9}, {3.9174306181518517`*^9, 
   3.9174306217591057`*^9}, {3.917699715059616*^9, 3.917699819643145*^9}, {
   3.9176998688072844`*^9, 3.9176999032874303`*^9}, {3.9176999497891436`*^9, 
   3.917700014026762*^9}, {3.917700141532531*^9, 3.9177001632797637`*^9}, {
   3.9177954012053833`*^9, 3.9177954329981585`*^9}, {3.9177971771563435`*^9, 
   3.9177972532717056`*^9}, {3.9179583543688555`*^9, 3.917958433043666*^9}, {
   3.917958652963355*^9, 3.917958676096295*^9}, 3.9200470269059753`*^9, {
   3.9200474820851254`*^9, 3.920047574994845*^9}, {3.9200476123278065`*^9, 
   3.920047664050806*^9}, {3.9202811598932686`*^9, 3.920281161960842*^9}, {
   3.920285038369461*^9, 3.920285039293147*^9}, {3.9203647556422825`*^9, 
   3.920364755754939*^9}, {3.920365190602573*^9, 3.920365190729232*^9}, {
   3.9203655274994373`*^9, 3.920365527667137*^9}, {3.9203662468156843`*^9, 
   3.920366247329443*^9}, {3.9203846174358325`*^9, 3.920384619278589*^9}, {
   3.9203848381539245`*^9, 3.9203848439387646`*^9}, {3.920385535745845*^9, 
   3.920385535908225*^9}, {3.920385847421628*^9, 3.9203859062846603`*^9}, {
   3.9203864449631987`*^9, 3.920386466383772*^9}, {3.9203866375110235`*^9, 
   3.920386647496006*^9}, {3.920386808962126*^9, 3.920386823316597*^9}, {
   3.920386946164067*^9, 3.9203869655277243`*^9}, {3.9203870230963755`*^9, 
   3.9203870332487636`*^9}, {3.9203912302795067`*^9, 
   3.9203912368179483`*^9}, {3.9204587054293604`*^9, 
   3.9204587601589932`*^9}, {3.920458819465439*^9, 3.9204588269313507`*^9}, {
   3.9204591491596313`*^9, 3.920459156866661*^9}, {3.920459518580551*^9, 
   3.920459529272165*^9}, {3.9204596006628633`*^9, 3.920459609844787*^9}, {
   3.920482079811863*^9, 3.920482120414338*^9}, {3.9204824034924655`*^9, 
   3.92048240361713*^9}, {3.9205399167768707`*^9, 3.9205399938119793`*^9}, {
   3.9205463773780465`*^9, 3.920546386437416*^9}, {3.921935525412758*^9, 
   3.9219355285109243`*^9}, {3.9222026497065926`*^9, 
   3.9222026511847057`*^9}, {3.9224582155587234`*^9, 
   3.9224582489234953`*^9}, {3.9224582916512556`*^9, 
   3.9224582948038015`*^9}, {3.9224583871907816`*^9, 
   3.9224584006607804`*^9}, {3.922459875191568*^9, 3.9224598956778345`*^9}, {
   3.9224599397410593`*^9, 3.9224600018262*^9}, {3.922460088482767*^9, 
   3.92246017226155*^9}, {3.922460259795761*^9, 3.922460323999341*^9}, {
   3.922460444941572*^9, 3.922460448407304*^9}, {3.922461370024521*^9, 
   3.9224613768991375`*^9}, {3.9224616425613985`*^9, 
   3.9224616426930246`*^9}, {3.922461719198101*^9, 3.9224617193626614`*^9}, {
   3.9224617740073953`*^9, 3.9224617742387786`*^9}, {3.9224618779204516`*^9, 
   3.922461878191727*^9}, {3.9224619231601334`*^9, 3.922461926442356*^9}, {
   3.9224619752448773`*^9, 3.922461980466913*^9}, {3.9253013463686543`*^9, 
   3.925301364507659*^9}, {3.925306539728881*^9, 3.9253065708380737`*^9}, {
   3.9254750640904446`*^9, 3.925475080127239*^9}, {3.9254755931379128`*^9, 
   3.9254755933124104`*^9}, {3.9254820111843405`*^9, 
   3.9254820115623283`*^9}, {3.9254822417523108`*^9, 3.9254822587637353`*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"73a31c00-86d7-433c-8a3b-aef86e7cc2d1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{"3", " ", "y", " ", 
     SubscriptBox["u", "0"]}], 
    RowBox[{"b", " ", 
     SuperscriptBox["const", "2"]}]]}], "+", 
  RowBox[{
   SuperscriptBox["y", "3"], " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{"3", " ", 
       SuperscriptBox["const", "2"]}], 
      RowBox[{"8", " ", 
       SuperscriptBox["b", "2"]}]], "+", 
     RowBox[{"45", " ", 
      SubsuperscriptBox["c", "0", "2"]}], "-", 
     FractionBox[
      RowBox[{"117", " ", 
       SubscriptBox["c", "0"], " ", 
       SubscriptBox["c", "1"]}], 
      RowBox[{"4", " ", "b"}]], "+", 
     FractionBox[
      RowBox[{"15", " ", 
       SubsuperscriptBox["c", "1", "2"]}], 
      RowBox[{"4", " ", 
       SuperscriptBox["b", "2"]}]], "+", 
     FractionBox[
      RowBox[{"13", " ", 
       SubscriptBox["c", "0"], " ", 
       SubscriptBox["c", "2"]}], 
      RowBox[{"2", " ", 
       SuperscriptBox["b", "2"]}]], "-", 
     FractionBox[
      RowBox[{
       SubscriptBox["c", "1"], " ", 
       SubscriptBox["c", "2"]}], 
      SuperscriptBox["b", "3"]], "-", 
     FractionBox[
      RowBox[{"3", " ", 
       SubscriptBox["c", "0"], " ", 
       SubscriptBox["c", "3"]}], 
      RowBox[{"4", " ", 
       SuperscriptBox["b", "3"]}]], "+", 
     FractionBox[
      RowBox[{"6", " ", 
       SubscriptBox["c", "0"], " ", 
       SubscriptBox["d", "1"]}], "b"], "-", 
     FractionBox[
      RowBox[{"3", " ", 
       SubscriptBox["c", "1"], " ", 
       SubscriptBox["d", "1"]}], 
      SuperscriptBox["b", "2"]], "+", 
     FractionBox[
      RowBox[{
       SubscriptBox["c", "2"], " ", 
       SubscriptBox["d", "1"]}], 
      SuperscriptBox["b", "3"]], "-", 
     FractionBox[
      RowBox[{"30", " ", 
       SubscriptBox["u", "0"]}], 
      RowBox[{"b", " ", 
       SuperscriptBox["const", "2"]}]]}], ")"}]}], "+", 
  RowBox[{
   SuperscriptBox["y", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"3", " ", 
        SuperscriptBox["const", "2"]}], 
       RowBox[{"16", " ", 
        SuperscriptBox["b", "2"]}]]}], "-", 
     FractionBox[
      RowBox[{"9", " ", 
       SubsuperscriptBox["c", "0", "2"]}], "2"], "+", 
     FractionBox[
      RowBox[{"9", " ", 
       SubscriptBox["c", "0"], " ", 
       SubscriptBox["c", "1"]}], 
      RowBox[{"4", " ", "b"}]], "-", 
     FractionBox[
      RowBox[{"3", " ", 
       SubsuperscriptBox["c", "1", "2"]}], 
      RowBox[{"16", " ", 
       SuperscriptBox["b", "2"]}]], "-", 
     FractionBox[
      RowBox[{
       SubscriptBox["c", "0"], " ", 
       SubscriptBox["c", "2"]}], 
      RowBox[{"4", " ", 
       SuperscriptBox["b", "2"]}]], "+", 
     FractionBox[
      RowBox[{"12", " ", 
       SubscriptBox["u", "0"]}], 
      RowBox[{"b", " ", 
       SuperscriptBox["const", "2"]}]]}], ")"}]}], "+", 
  RowBox[{
   SuperscriptBox["y", "4"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"9", " ", 
        SuperscriptBox["const", "2"]}], 
       RowBox[{"16", " ", 
        SuperscriptBox["b", "2"]}]]}], "-", 
     RowBox[{"243", " ", 
      SubsuperscriptBox["c", "0", "2"]}], "+", 
     FractionBox[
      RowBox[{"189", " ", 
       SubscriptBox["c", "0"], " ", 
       SubscriptBox["c", "1"]}], "b"], "-", 
     FractionBox[
      RowBox[{"501", " ", 
       SubsuperscriptBox["c", "1", "2"]}], 
      RowBox[{"16", " ", 
       SuperscriptBox["b", "2"]}]], "-", 
     FractionBox[
      RowBox[{"233", " ", 
       SubscriptBox["c", "0"], " ", 
       SubscriptBox["c", "2"]}], 
      RowBox[{"4", " ", 
       SuperscriptBox["b", "2"]}]], "+", 
     FractionBox[
      RowBox[{"59", " ", 
       SubscriptBox["c", "1"], " ", 
       SubscriptBox["c", "2"]}], 
      RowBox[{"4", " ", 
       SuperscriptBox["b", "3"]}]], "-", 
     FractionBox[
      SubsuperscriptBox["c", "2", "2"], 
      SuperscriptBox["b", "4"]], "+", 
     FractionBox[
      RowBox[{"51", " ", 
       SubscriptBox["c", "0"], " ", 
       SubscriptBox["c", "3"]}], 
      RowBox[{"4", " ", 
       SuperscriptBox["b", "3"]}]], "-", 
     FractionBox[
      RowBox[{"15", " ", 
       SubscriptBox["c", "1"], " ", 
       SubscriptBox["c", "3"]}], 
      RowBox[{"8", " ", 
       SuperscriptBox["b", "4"]}]], "-", 
     FractionBox[
      RowBox[{"24", " ", 
       SubscriptBox["c", "0"], " ", 
       SubscriptBox["d", "1"]}], "b"], "+", 
     FractionBox[
      RowBox[{"15", " ", 
       SubscriptBox["c", "1"], " ", 
       SubscriptBox["d", "1"]}], 
      SuperscriptBox["b", "2"]], "-", 
     FractionBox[
      RowBox[{"8", " ", 
       SubscriptBox["c", "2"], " ", 
       SubscriptBox["d", "1"]}], 
      SuperscriptBox["b", "3"]], "+", 
     FractionBox[
      RowBox[{"3", " ", 
       SubscriptBox["c", "3"], " ", 
       SubscriptBox["d", "1"]}], 
      SuperscriptBox["b", "4"]], "+", 
     FractionBox[
      RowBox[{"6", " ", 
       SubscriptBox["c", "0"], " ", 
       SubscriptBox["d", "2"]}], 
      SuperscriptBox["b", "2"]], "-", 
     FractionBox[
      RowBox[{"3", " ", 
       SubscriptBox["c", "1"], " ", 
       SubscriptBox["d", "2"]}], 
      SuperscriptBox["b", "3"]], "+", 
     FractionBox[
      RowBox[{
       SubscriptBox["c", "2"], " ", 
       SubscriptBox["d", "2"]}], 
      SuperscriptBox["b", "4"]], "+", 
     FractionBox[
      RowBox[{"54", " ", 
       SubscriptBox["u", "0"]}], 
      RowBox[{"b", " ", 
       SuperscriptBox["const", "2"]}]]}], ")"}]}]}]], "Output",
 CellChangeTimes->{{3.9224602613027196`*^9, 3.9224602986010065`*^9}, 
   3.9224603458379407`*^9, 3.922461373724641*^9, 3.9224616470693207`*^9, 
   3.922461723644212*^9, {3.922461977260488*^9, 3.922461981996821*^9}, 
   3.925301333514906*^9, 3.925301371473321*^9, 3.925306547015314*^9, 
   3.925306578375141*^9, 3.9254751182427726`*^9, 3.9254756181872663`*^9, 
   3.925482033389346*^9, 3.925482262668573*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"ffe75179-9dd4-4dd0-ab12-6be04622a95b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{
     SuperscriptBox["y", "2"], " ", 
     SubscriptBox["d", "1"]}], 
    SuperscriptBox["b", "2"]]}], "+", 
  RowBox[{
   SuperscriptBox["y", "3"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"13", " ", 
        SubscriptBox["c", "0"]}], "b"]}], "+", 
     FractionBox[
      RowBox[{"4", " ", 
       SubscriptBox["c", "1"]}], 
      SuperscriptBox["b", "2"]], "-", 
     FractionBox[
      RowBox[{"3", " ", 
       SubscriptBox["c", "2"]}], 
      RowBox[{"4", " ", 
       SuperscriptBox["b", "3"]}]], "-", 
     FractionBox[
      SubscriptBox["d", "1"], 
      SuperscriptBox["b", "2"]], "-", 
     FractionBox[
      RowBox[{"3", " ", 
       SubscriptBox["d", "2"]}], 
      SuperscriptBox["b", "3"]]}], ")"}]}], "+", 
  RowBox[{
   SuperscriptBox["y", "4"], " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{"129", " ", 
       SubscriptBox["c", "0"]}], "b"], "-", 
     FractionBox[
      RowBox[{"195", " ", 
       SubscriptBox["c", "1"]}], 
      RowBox[{"4", " ", 
       SuperscriptBox["b", "2"]}]], "+", 
     FractionBox[
      RowBox[{"14", " ", 
       SubscriptBox["c", "2"]}], 
      SuperscriptBox["b", "3"]], "-", 
     FractionBox[
      RowBox[{"9", " ", 
       SubscriptBox["c", "3"]}], 
      RowBox[{"4", " ", 
       SuperscriptBox["b", "4"]}]], "+", 
     FractionBox[
      RowBox[{"6", " ", 
       SubscriptBox["d", "1"]}], 
      SuperscriptBox["b", "2"]], "-", 
     FractionBox[
      RowBox[{"6", " ", 
       SubscriptBox["d", "3"]}], 
      SuperscriptBox["b", "4"]]}], ")"}]}]}]], "Output",
 CellChangeTimes->{{3.9224602613027196`*^9, 3.9224602986010065`*^9}, 
   3.9224603458379407`*^9, 3.922461373724641*^9, 3.9224616470693207`*^9, 
   3.922461723644212*^9, {3.922461977260488*^9, 3.922461981996821*^9}, 
   3.925301333514906*^9, 3.925301371473321*^9, 3.925306547015314*^9, 
   3.925306578375141*^9, 3.9254751182427726`*^9, 3.9254756181872663`*^9, 
   3.925482033389346*^9, 3.92548226268752*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"d7c4b960-aebe-4a53-ab82-2d6392213b0a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Take", " ", "the", " ", "coefficents", " ", "of", " ", "the", " ", 
    "resulting", " ", "equations", " ", "for", " ", "each", " ", "power", " ",
     "of", " ", "y", " ", "then", " ", "set", " ", "the", " ", "coefficents", 
    " ", "equal", " ", "to", " ", 
    RowBox[{"zero", ".", " ", "Use"}], " ", "solve", " ", "equation", " ", 
    "to", " ", "solve", " ", "for", " ", "the", " ", "constants", " ", 
    "remaining", " ", "in", " ", "the", " ", "coefficents"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Hlist", "=", 
     RowBox[{"CoefficientList", "[", 
      RowBox[{
       SubscriptBox["H", "solve"], ",", "y"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p2list", "=", 
     RowBox[{"CoefficientList", "[", 
      RowBox[{
       SubscriptBox["pdot2", "solve"], ",", "y"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"equationsL", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"Hlist", "[", 
         RowBox[{"[", "4", "]"}], "]"}], "==", "0"}], ",", 
       RowBox[{
        RowBox[{"Hlist", "[", 
         RowBox[{"[", "5", "]"}], "]"}], "==", "0"}], ",", 
       RowBox[{
        RowBox[{"Hlist", "[", 
         RowBox[{"[", "3", "]"}], "]"}], "==", "0"}], ",", 
       RowBox[{
        RowBox[{"p2list", "[", 
         RowBox[{"[", "4", "]"}], "]"}], "==", "0"}], ",", 
       RowBox[{
        RowBox[{"p2list", "[", 
         RowBox[{"[", "5", "]"}], "]"}], "==", "0"}], ",", 
       RowBox[{
        RowBox[{"p2list", "[", 
         RowBox[{"[", "3", "]"}], "]"}], "==", "0"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Resolve", "[", 
    RowBox[{
     RowBox[{"Collect", "[", 
      RowBox[{"equationsL", ",", 
       RowBox[{"{", 
        RowBox[{
         SubscriptBox["c", "3"], ",", 
         SubscriptBox["c", "1"], ",", 
         SubscriptBox["c", "2"]}], "}"}]}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["c", "3"], ",", 
       SubscriptBox["d", "3"], " ", ",", 
       SubscriptBox["c", "1"], ",", 
       SubscriptBox["c", "2"], ",", 
       SubscriptBox["d", "2"]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "manually", " ", "remove", " ", "ci", " ", "first", " ", "order", " ", 
     "terms", " ", "from", " ", "the", " ", "Hamiltonian", " ", 
     RowBox[{"constraints", ":"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"EqnsL2", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         FractionBox[
          RowBox[{"3", " ", 
           SuperscriptBox["const", "2"]}], 
          RowBox[{"8", " ", 
           SuperscriptBox["b", "2"]}]], "+", 
         FractionBox[
          RowBox[{"15", " ", 
           SubsuperscriptBox["c", "1", "2"]}], 
          RowBox[{"4", " ", 
           SuperscriptBox["b", "2"]}]], "-", 
         FractionBox[
          RowBox[{
           SubscriptBox["c", "1"], " ", 
           SubscriptBox["c", "2"]}], 
          SuperscriptBox["b", "3"]], "-", 
         FractionBox[
          RowBox[{"30", " ", 
           SubscriptBox["u", "0"]}], 
          RowBox[{"b", " ", 
           SuperscriptBox["const", "2"]}]]}], "\[Equal]", "0"}], "&&", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{"9", " ", 
            SuperscriptBox["const", "2"]}], 
           RowBox[{"16", " ", 
            SuperscriptBox["b", "2"]}]]}], "-", 
         FractionBox[
          RowBox[{"501", " ", 
           SubsuperscriptBox["c", "1", "2"]}], 
          RowBox[{"16", " ", 
           SuperscriptBox["b", "2"]}]], "-", 
         FractionBox[
          SubsuperscriptBox["c", "2", "2"], 
          SuperscriptBox["b", "4"]], "-", 
         FractionBox[
          RowBox[{"15", " ", 
           SubscriptBox["c", "1"], " ", 
           SubscriptBox["c", "3"]}], 
          RowBox[{"8", " ", 
           SuperscriptBox["b", "4"]}]], "+", 
         RowBox[{
          SubscriptBox["c", "1"], " ", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"59", " ", 
             SubscriptBox["c", "2"]}], 
            RowBox[{"4", " ", 
             SuperscriptBox["b", "3"]}]], ")"}]}], "+", 
         FractionBox[
          RowBox[{"54", " ", 
           SubscriptBox["u", "0"]}], 
          RowBox[{"b", " ", 
           SuperscriptBox["const", "2"]}]]}], "\[Equal]", "0"}], "&&", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{"3", " ", 
            SuperscriptBox["const", "2"]}], 
           RowBox[{"16", " ", 
            SuperscriptBox["b", "2"]}]]}], "-", 
         FractionBox[
          RowBox[{"3", " ", 
           SubsuperscriptBox["c", "1", "2"]}], 
          RowBox[{"16", " ", 
           SuperscriptBox["b", "2"]}]], "+", 
         FractionBox[
          RowBox[{"12", " ", 
           SubscriptBox["u", "0"]}], 
          RowBox[{"b", " ", 
           SuperscriptBox["const", "2"]}]]}], "\[Equal]", "0"}], "&&", 
       RowBox[{
        RowBox[{
         FractionBox[
          RowBox[{"4", " ", 
           SubscriptBox["c", "1"]}], 
          SuperscriptBox["b", "2"]], "-", 
         FractionBox[
          RowBox[{"3", " ", 
           SubscriptBox["c", "2"]}], 
          RowBox[{"4", " ", 
           SuperscriptBox["b", "3"]}]], "-", 
         FractionBox[
          RowBox[{"3", " ", 
           SubscriptBox["d", "2"]}], 
          SuperscriptBox["b", "3"]]}], "\[Equal]", "0"}], "&&", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{"195", " ", 
            SubscriptBox["c", "1"]}], 
           RowBox[{"4", " ", 
            SuperscriptBox["b", "2"]}]]}], "+", 
         FractionBox[
          RowBox[{"14", " ", 
           SubscriptBox["c", "2"]}], 
          SuperscriptBox["b", "3"]], "-", 
         FractionBox[
          RowBox[{"9", " ", 
           SubscriptBox["c", "3"]}], 
          RowBox[{"4", " ", 
           SuperscriptBox["b", "4"]}]], "-", 
         FractionBox[
          RowBox[{"6", " ", 
           SubscriptBox["d", "3"]}], 
          SuperscriptBox["b", "4"]]}], "\[Equal]", "0"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Soln", "=", 
    RowBox[{
     RowBox[{"Solve", "[", 
      RowBox[{"EqnsL2", ",", 
       RowBox[{"{", 
        RowBox[{
         SubscriptBox["c", "3"], ",", 
         SubscriptBox["d", "3"], " ", ",", 
         SubscriptBox["c", "1"], ",", 
         SubscriptBox["c", "2"], ",", 
         SubscriptBox["d", "2"]}], "}"}]}], "]"}], "//", "Simplify"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.914948381666613*^9, 3.9149484790966945`*^9}, {
   3.9149485908530807`*^9, 3.9149486136332045`*^9}, {3.9149487830603647`*^9, 
   3.914948800082402*^9}, {3.9149488894087276`*^9, 3.9149488936737156`*^9}, {
   3.9149494024895334`*^9, 3.914949457547007*^9}, {3.915022586996197*^9, 
   3.91502267947686*^9}, {3.9150227270437255`*^9, 3.915022738871153*^9}, {
   3.917107501766159*^9, 3.9171075030287714`*^9}, {3.9173635044777126`*^9, 
   3.9173635820021205`*^9}, {3.91736366873979*^9, 3.917363722923417*^9}, {
   3.9173637912513304`*^9, 3.917363830023415*^9}, {3.917428256454586*^9, 
   3.9174283153489485`*^9}, {3.9174298596227703`*^9, 
   3.9174301523926506`*^9}, {3.9174302071705527`*^9, 
   3.9174302091716743`*^9}, {3.9174303272520933`*^9, 
   3.9174303787112107`*^9}, {3.9174304229240236`*^9, 
   3.9174304928746123`*^9}, {3.917430527006734*^9, 3.917430528977298*^9}, {
   3.9174305760196037`*^9, 3.917430580440486*^9}, {3.920047899767978*^9, 
   3.9200480847898235`*^9}, {3.9200481149551554`*^9, 3.920048158292841*^9}, {
   3.9202373953851776`*^9, 3.9202374073622704`*^9}, {3.920237514464012*^9, 
   3.920237525605796*^9}, {3.920237562537691*^9, 3.9202375626992598`*^9}, {
   3.9202845943342896`*^9, 3.920284623145111*^9}, {3.920384408325245*^9, 
   3.920384411848854*^9}, {3.920384639617387*^9, 3.920384672499877*^9}, {
   3.920384704790816*^9, 3.920384718377538*^9}, {3.92038480730044*^9, 
   3.920384852302106*^9}, {3.9203854144705296`*^9, 3.920385414593194*^9}, {
   3.9203855228497725`*^9, 3.9203855270759125`*^9}, {3.9203859935743647`*^9, 
   3.920385998113597*^9}, {3.9203861282943163`*^9, 3.920386128397184*^9}, {
   3.920386191656046*^9, 3.9203861918974166`*^9}, {3.9203862440842123`*^9, 
   3.9203862485946274`*^9}, {3.920386494825003*^9, 3.9203865124435782`*^9}, {
   3.920386879046361*^9, 3.920386885453429*^9}, {3.9203912819843082`*^9, 
   3.9203912875677233`*^9}, {3.9204587891640234`*^9, 3.920458815861799*^9}, {
   3.920459181413272*^9, 3.92045921924809*^9}, {3.920459312815981*^9, 
   3.9204593256660166`*^9}, {3.920538442998149*^9, 3.9205384487063417`*^9}, {
   3.920538583632451*^9, 3.920538585788272*^9}, {3.920539850157075*^9, 
   3.920539869232382*^9}, {3.9205400137515507`*^9, 3.9205400336044097`*^9}, {
   3.920546268013013*^9, 3.9205462802320876`*^9}, {3.92054631485188*^9, 
   3.920546319255066*^9}, {3.920546394793769*^9, 3.9205463994667892`*^9}, {
   3.9205464468167944`*^9, 3.920546451623975*^9}, {3.921935413733609*^9, 
   3.92193551674155*^9}, {3.921938655409937*^9, 3.921938659894878*^9}, {
   3.9219434596230507`*^9, 3.9219434913273544`*^9}, {3.922180962927029*^9, 
   3.922180982462558*^9}, {3.9221811333416934`*^9, 3.9221811681358438`*^9}, {
   3.9221812092550774`*^9, 3.9221812125857573`*^9}, {3.922181281025753*^9, 
   3.9221813956917734`*^9}, 3.9221815610293674`*^9, {3.922181609758541*^9, 
   3.922181613455858*^9}, {3.9221817354774017`*^9, 3.9221817636788836`*^9}, {
   3.922181829987407*^9, 3.9221818353342*^9}, {3.922181874924619*^9, 
   3.9221818809816074`*^9}, {3.9222016662694435`*^9, 3.9222016740728493`*^9}, 
   3.922201746682762*^9, 3.9222019311623316`*^9, {3.922202046239185*^9, 
   3.9222020528604064`*^9}, 3.922459935789627*^9, 3.9224603977531176`*^9, 
   3.9224604345811415`*^9, {3.9224604650577774`*^9, 3.922460528241809*^9}, {
   3.922460571723198*^9, 3.9224605843170147`*^9}, {3.9224614168572884`*^9, 
   3.9224614874224977`*^9}, {3.9224616722107525`*^9, 3.922461693119836*^9}, {
   3.9224617938326025`*^9, 3.9224618034159746`*^9}, {3.922461897552614*^9, 
   3.9224619072786045`*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"92c5ab6e-271b-4508-8b4d-c35273670545"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"3", " ", 
      SuperscriptBox["const", "2"]}], 
     RowBox[{"8", " ", 
      SuperscriptBox["b", "2"]}]], "+", 
    FractionBox[
     RowBox[{"15", " ", 
      SubsuperscriptBox["c", "1", "2"]}], 
     RowBox[{"4", " ", 
      SuperscriptBox["b", "2"]}]], "+", 
    FractionBox[
     RowBox[{
      SubscriptBox["c", "2"], " ", 
      SubscriptBox["d", "1"]}], 
     SuperscriptBox["b", "3"]], "+", 
    RowBox[{
     SubscriptBox["c", "1"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         SubscriptBox["c", "2"], 
         SuperscriptBox["b", "3"]]}], "-", 
       FractionBox[
        RowBox[{"3", " ", 
         SubscriptBox["d", "1"]}], 
        SuperscriptBox["b", "2"]]}], ")"}]}], "+", 
    FractionBox[
     RowBox[{"12", " ", 
      SubscriptBox["u", "0"]}], 
     RowBox[{
      SuperscriptBox["b", "2"], " ", 
      SuperscriptBox["const", "2"]}]]}], "\[Equal]", "0"}], "&&", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{"9", " ", 
       SuperscriptBox["const", "2"]}], 
      RowBox[{"16", " ", 
       SuperscriptBox["b", "2"]}]]}], "-", 
    FractionBox[
     RowBox[{"501", " ", 
      SubsuperscriptBox["c", "1", "2"]}], 
     RowBox[{"16", " ", 
      SuperscriptBox["b", "2"]}]], "-", 
    FractionBox[
     SubsuperscriptBox["c", "2", "2"], 
     SuperscriptBox["b", "4"]], "+", 
    RowBox[{
     SubscriptBox["c", "3"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"15", " ", 
          SubscriptBox["c", "1"]}], 
         RowBox[{"8", " ", 
          SuperscriptBox["b", "4"]}]]}], "+", 
       FractionBox[
        RowBox[{"3", " ", 
         SubscriptBox["d", "1"]}], 
        SuperscriptBox["b", "4"]]}], ")"}]}], "+", 
    RowBox[{
     SubscriptBox["c", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"8", " ", 
          SubscriptBox["d", "1"]}], 
         SuperscriptBox["b", "3"]]}], "+", 
       FractionBox[
        SubscriptBox["d", "2"], 
        SuperscriptBox["b", "4"]]}], ")"}]}], "+", 
    RowBox[{
     SubscriptBox["c", "1"], " ", 
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{"59", " ", 
         SubscriptBox["c", "2"]}], 
        RowBox[{"4", " ", 
         SuperscriptBox["b", "3"]}]], "+", 
       FractionBox[
        RowBox[{"15", " ", 
         SubscriptBox["d", "1"]}], 
        SuperscriptBox["b", "2"]], "-", 
       FractionBox[
        RowBox[{"3", " ", 
         SubscriptBox["d", "2"]}], 
        SuperscriptBox["b", "3"]]}], ")"}]}], "-", 
    FractionBox[
     RowBox[{"30", " ", 
      SubscriptBox["u", "0"]}], 
     RowBox[{
      SuperscriptBox["b", "2"], " ", 
      SuperscriptBox["const", "2"]}]]}], "\[Equal]", "0"}], "&&", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{"3", " ", 
       SuperscriptBox["const", "2"]}], 
      RowBox[{"16", " ", 
       SuperscriptBox["b", "2"]}]]}], "-", 
    FractionBox[
     RowBox[{"3", " ", 
      SubsuperscriptBox["c", "1", "2"]}], 
     RowBox[{"16", " ", 
      SuperscriptBox["b", "2"]}]], "-", 
    FractionBox[
     RowBox[{"3", " ", 
      SubscriptBox["u", "0"]}], 
     RowBox[{
      SuperscriptBox["b", "2"], " ", 
      SuperscriptBox["const", "2"]}]]}], "\[Equal]", "0"}], "&&", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"4", " ", 
      SubscriptBox["c", "1"]}], 
     SuperscriptBox["b", "2"]], "-", 
    FractionBox[
     RowBox[{"3", " ", 
      SubscriptBox["c", "2"]}], 
     RowBox[{"4", " ", 
      SuperscriptBox["b", "3"]}]], "-", 
    FractionBox[
     SubscriptBox["d", "1"], 
     SuperscriptBox["b", "2"]], "-", 
    FractionBox[
     RowBox[{"3", " ", 
      SubscriptBox["d", "2"]}], 
     SuperscriptBox["b", "3"]]}], "\[Equal]", "0"}], "&&", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{"195", " ", 
       SubscriptBox["c", "1"]}], 
      RowBox[{"4", " ", 
       SuperscriptBox["b", "2"]}]]}], "+", 
    FractionBox[
     RowBox[{"14", " ", 
      SubscriptBox["c", "2"]}], 
     SuperscriptBox["b", "3"]], "-", 
    FractionBox[
     RowBox[{"9", " ", 
      SubscriptBox["c", "3"]}], 
     RowBox[{"4", " ", 
      SuperscriptBox["b", "4"]}]], "+", 
    FractionBox[
     RowBox[{"6", " ", 
      SubscriptBox["d", "1"]}], 
     SuperscriptBox["b", "2"]], "-", 
    FractionBox[
     RowBox[{"6", " ", 
      SubscriptBox["d", "3"]}], 
     SuperscriptBox["b", "4"]]}], "\[Equal]", "0"}], "&&", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     SubscriptBox["d", "1"], 
     SuperscriptBox["b", "2"]]}], "\[Equal]", "0"}]}]], "Output",
 CellChangeTimes->{
  3.9149484815803833`*^9, 3.914948801970961*^9, 3.914948894755806*^9, 
   3.9149496213606243`*^9, 3.915022741861409*^9, 3.915619376974352*^9, 
   3.9156194086433525`*^9, 3.917106258003225*^9, 3.917106343835037*^9, 
   3.9171064107748375`*^9, 3.917107281336192*^9, 3.9171073651719255`*^9, 
   3.917107504800048*^9, 3.9171078800080624`*^9, 3.917360297792596*^9, 
   3.917361545499361*^9, 3.9173620919547606`*^9, 3.9173624507605*^9, 
   3.917362534184044*^9, 3.917363654016276*^9, {3.917363727517501*^9, 
   3.9173637411261325`*^9}, 3.9173637924992275`*^9, 3.917363831713896*^9, 
   3.917428158197777*^9, {3.9174282827022705`*^9, 3.917428308882306*^9}, 
   3.9174294453746867`*^9, 3.917429726518405*^9, 3.91743015433258*^9, {
   3.917430210203638*^9, 3.91743022620617*^9}, {3.9174303331366615`*^9, 
   3.917430364971921*^9}, {3.9174304747714577`*^9, 3.9174304937597733`*^9}, 
   3.9174305300217543`*^9, 3.9174305819403133`*^9, 3.9174306309804077`*^9, 
   3.91769967510598*^9, {3.917699861048525*^9, 3.9176998823438683`*^9}, 
   3.9176999665652432`*^9, 3.9177006549744444`*^9, 3.917795214674835*^9, 
   3.9177953786330943`*^9, 3.917797108620489*^9, 3.917797476211477*^9, 
   3.9177976019463205`*^9, 3.9179498165175424`*^9, 3.9179509861894608`*^9, 
   3.9179511561274757`*^9, 3.917958190230418*^9, 3.917958480914734*^9, 
   3.9200453782228465`*^9, 3.920045873524275*^9, 3.9200466908582883`*^9, 
   3.9200469473456464`*^9, 3.92004710174302*^9, 3.920237434295742*^9, 
   3.920237499668948*^9, 3.920237611010043*^9, 3.9202801810329933`*^9, 
   3.920280326041863*^9, 3.920280666266098*^9, 3.9202811878909793`*^9, 
   3.9202818623672743`*^9, 3.9202837311347094`*^9, {3.9202846162031946`*^9, 
   3.920284629059862*^9}, 3.9202847831894336`*^9, 3.9202850577009363`*^9, 
   3.9202851098939223`*^9, 3.92036468557201*^9, 3.9203651982400675`*^9, 
   3.9203661247142115`*^9, 3.920384413162691*^9, 3.920384594398143*^9, {
   3.9203846261130886`*^9, 3.9203846752343907`*^9}, 3.9203847219808874`*^9, {
   3.9203848177183304`*^9, 3.9203848545591574`*^9}, 3.9203849558725595`*^9, 
   3.920385415773554*^9, 3.9203855747270103`*^9, 3.920385725003621*^9, 
   3.920385952368601*^9, 3.92038612970502*^9, 3.920386193488532*^9, 
   3.920386250207306*^9, 3.920386514985004*^9, 3.920386655399016*^9, 
   3.9203868296579742`*^9, 3.920386888342086*^9, 3.920386976412861*^9, 
   3.920387039071849*^9, 3.9203912571899004`*^9, 3.9203912891842217`*^9, 
   3.9204585018849926`*^9, 3.920458558117981*^9, 3.9204587303291645`*^9, {
   3.9204587830612235`*^9, 3.9204588310586443`*^9}, {3.92045919184846*^9, 
   3.9204592207702646`*^9}, {3.9204593139394846`*^9, 3.920459326947955*^9}, {
   3.9204595355440598`*^9, 3.920459538278356*^9}, 3.9204596152861185`*^9, 
   3.9204821428066683`*^9, 3.920538587427484*^9, 3.9205388099816666`*^9, 
   3.9205398564931927`*^9, 3.9205400371888437`*^9, 3.920540092034051*^9, 
   3.920546296183648*^9, 3.920546348178813*^9, 3.9219355704963045`*^9, 
   3.9221809901820526`*^9, 3.9221810300943947`*^9, 3.9221813794727507`*^9, 
   3.922181624089197*^9, 3.922181767032029*^9, 3.9222016265379105`*^9, {
   3.9222016677188845`*^9, 3.922201675075284*^9}, 3.922201766944654*^9, 
   3.9222019578635397`*^9, 3.9222025606627564`*^9, 3.9222026756262712`*^9, 
   3.9224582734050274`*^9, 3.922458303822683*^9, 3.92246002399391*^9, 
   3.9224602413071933`*^9, 3.9224603461291637`*^9, 3.922460398535016*^9, 
   3.92246059433921*^9, 3.9224614882821946`*^9, 3.922461660317608*^9, 
   3.9253013337462854`*^9, 3.9253065784818583`*^9, 3.9254751184851265`*^9, 
   3.9254756184325457`*^9, 3.9254820336426697`*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"fb5a8c1a-bc98-4f93-a5ca-f874691d3a0b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["c", "3"], "\[Rule]", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["b", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"163", " ", 
            SuperscriptBox["const", "8"]}], "-", 
           RowBox[{"20224", " ", "b", " ", 
            SuperscriptBox["const", "4"], " ", 
            SubscriptBox["u", "0"]}], "+", 
           RowBox[{"625920", " ", 
            SuperscriptBox["b", "2"], " ", 
            SubsuperscriptBox["u", "0", "2"]}]}], ")"}]}], 
        RowBox[{"40", " ", "const", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["const", "4"]}], "+", 
            RowBox[{"64", " ", "b", " ", 
             SubscriptBox["u", "0"]}]}], ")"}], 
          RowBox[{"3", "/", "2"}]]}]]}]}], ",", 
     RowBox[{
      SubscriptBox["d", "3"], "\[Rule]", 
      FractionBox[
       RowBox[{
        SuperscriptBox["b", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"569", " ", 
           SuperscriptBox["const", "8"]}], "-", 
          RowBox[{"75392", " ", "b", " ", 
           SuperscriptBox["const", "4"], " ", 
           SubscriptBox["u", "0"]}], "+", 
          RowBox[{"2492160", " ", 
           SuperscriptBox["b", "2"], " ", 
           SubsuperscriptBox["u", "0", "2"]}]}], ")"}]}], 
       RowBox[{"320", " ", "const", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["const", "4"]}], "+", 
           RowBox[{"64", " ", "b", " ", 
            SubscriptBox["u", "0"]}]}], ")"}], 
         RowBox[{"3", "/", "2"}]]}]]}], ",", 
     RowBox[{
      SubscriptBox["c", "1"], "\[Rule]", 
      RowBox[{"-", 
       FractionBox[
        SqrtBox[
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["const", "4"]}], "+", 
          RowBox[{"64", " ", "b", " ", 
           SubscriptBox["u", "0"]}]}]], "const"]}]}], ",", 
     RowBox[{
      SubscriptBox["c", "2"], "\[Rule]", 
      FractionBox[
       RowBox[{"3", " ", "b", " ", 
        SqrtBox[
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["const", "4"]}], "+", 
          RowBox[{"64", " ", "b", " ", 
           SubscriptBox["u", "0"]}]}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "9"}], " ", 
           SuperscriptBox["const", "4"]}], "+", 
          RowBox[{"560", " ", "b", " ", 
           SubscriptBox["u", "0"]}]}], ")"}]}], 
       RowBox[{"8", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["const", "5"], "-", 
          RowBox[{"64", " ", "b", " ", "const", " ", 
           SubscriptBox["u", "0"]}]}], ")"}]}]]}], ",", 
     RowBox[{
      SubscriptBox["d", "2"], "\[Rule]", 
      FractionBox[
       RowBox[{"b", " ", 
        SqrtBox[
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["const", "4"]}], "+", 
          RowBox[{"64", " ", "b", " ", 
           SubscriptBox["u", "0"]}]}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "47"}], " ", 
           SuperscriptBox["const", "4"]}], "+", 
          RowBox[{"3152", " ", "b", " ", 
           SubscriptBox["u", "0"]}]}], ")"}]}], 
       RowBox[{"96", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["const", "5"], "-", 
          RowBox[{"64", " ", "b", " ", "const", " ", 
           SubscriptBox["u", "0"]}]}], ")"}]}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["c", "3"], "\[Rule]", 
      FractionBox[
       RowBox[{
        SuperscriptBox["b", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"163", " ", 
           SuperscriptBox["const", "8"]}], "-", 
          RowBox[{"20224", " ", "b", " ", 
           SuperscriptBox["const", "4"], " ", 
           SubscriptBox["u", "0"]}], "+", 
          RowBox[{"625920", " ", 
           SuperscriptBox["b", "2"], " ", 
           SubsuperscriptBox["u", "0", "2"]}]}], ")"}]}], 
       RowBox[{"40", " ", "const", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["const", "4"]}], "+", 
           RowBox[{"64", " ", "b", " ", 
            SubscriptBox["u", "0"]}]}], ")"}], 
         RowBox[{"3", "/", "2"}]]}]]}], ",", 
     RowBox[{
      SubscriptBox["d", "3"], "\[Rule]", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["b", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"569", " ", 
            SuperscriptBox["const", "8"]}], "-", 
           RowBox[{"75392", " ", "b", " ", 
            SuperscriptBox["const", "4"], " ", 
            SubscriptBox["u", "0"]}], "+", 
           RowBox[{"2492160", " ", 
            SuperscriptBox["b", "2"], " ", 
            SubsuperscriptBox["u", "0", "2"]}]}], ")"}]}], 
        RowBox[{"320", " ", "const", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["const", "4"]}], "+", 
            RowBox[{"64", " ", "b", " ", 
             SubscriptBox["u", "0"]}]}], ")"}], 
          RowBox[{"3", "/", "2"}]]}]]}]}], ",", 
     RowBox[{
      SubscriptBox["c", "1"], "\[Rule]", 
      FractionBox[
       SqrtBox[
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["const", "4"]}], "+", 
         RowBox[{"64", " ", "b", " ", 
          SubscriptBox["u", "0"]}]}]], "const"]}], ",", 
     RowBox[{
      SubscriptBox["c", "2"], "\[Rule]", 
      FractionBox[
       RowBox[{"3", " ", "b", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"9", " ", 
           SuperscriptBox["const", "4"]}], "-", 
          RowBox[{"560", " ", "b", " ", 
           SubscriptBox["u", "0"]}]}], ")"}], " ", 
        SqrtBox[
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["const", "4"]}], "+", 
          RowBox[{"64", " ", "b", " ", 
           SubscriptBox["u", "0"]}]}]]}], 
       RowBox[{"8", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["const", "5"], "-", 
          RowBox[{"64", " ", "b", " ", "const", " ", 
           SubscriptBox["u", "0"]}]}], ")"}]}]]}], ",", 
     RowBox[{
      SubscriptBox["d", "2"], "\[Rule]", 
      FractionBox[
       RowBox[{"b", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"47", " ", 
           SuperscriptBox["const", "4"]}], "-", 
          RowBox[{"3152", " ", "b", " ", 
           SubscriptBox["u", "0"]}]}], ")"}], " ", 
        SqrtBox[
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["const", "4"]}], "+", 
          RowBox[{"64", " ", "b", " ", 
           SubscriptBox["u", "0"]}]}]]}], 
       RowBox[{"96", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["const", "5"], "-", 
          RowBox[{"64", " ", "b", " ", "const", " ", 
           SubscriptBox["u", "0"]}]}], ")"}]}]]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.9149484815803833`*^9, 3.914948801970961*^9, 3.914948894755806*^9, 
   3.9149496213606243`*^9, 3.915022741861409*^9, 3.915619376974352*^9, 
   3.9156194086433525`*^9, 3.917106258003225*^9, 3.917106343835037*^9, 
   3.9171064107748375`*^9, 3.917107281336192*^9, 3.9171073651719255`*^9, 
   3.917107504800048*^9, 3.9171078800080624`*^9, 3.917360297792596*^9, 
   3.917361545499361*^9, 3.9173620919547606`*^9, 3.9173624507605*^9, 
   3.917362534184044*^9, 3.917363654016276*^9, {3.917363727517501*^9, 
   3.9173637411261325`*^9}, 3.9173637924992275`*^9, 3.917363831713896*^9, 
   3.917428158197777*^9, {3.9174282827022705`*^9, 3.917428308882306*^9}, 
   3.9174294453746867`*^9, 3.917429726518405*^9, 3.91743015433258*^9, {
   3.917430210203638*^9, 3.91743022620617*^9}, {3.9174303331366615`*^9, 
   3.917430364971921*^9}, {3.9174304747714577`*^9, 3.9174304937597733`*^9}, 
   3.9174305300217543`*^9, 3.9174305819403133`*^9, 3.9174306309804077`*^9, 
   3.91769967510598*^9, {3.917699861048525*^9, 3.9176998823438683`*^9}, 
   3.9176999665652432`*^9, 3.9177006549744444`*^9, 3.917795214674835*^9, 
   3.9177953786330943`*^9, 3.917797108620489*^9, 3.917797476211477*^9, 
   3.9177976019463205`*^9, 3.9179498165175424`*^9, 3.9179509861894608`*^9, 
   3.9179511561274757`*^9, 3.917958190230418*^9, 3.917958480914734*^9, 
   3.9200453782228465`*^9, 3.920045873524275*^9, 3.9200466908582883`*^9, 
   3.9200469473456464`*^9, 3.92004710174302*^9, 3.920237434295742*^9, 
   3.920237499668948*^9, 3.920237611010043*^9, 3.9202801810329933`*^9, 
   3.920280326041863*^9, 3.920280666266098*^9, 3.9202811878909793`*^9, 
   3.9202818623672743`*^9, 3.9202837311347094`*^9, {3.9202846162031946`*^9, 
   3.920284629059862*^9}, 3.9202847831894336`*^9, 3.9202850577009363`*^9, 
   3.9202851098939223`*^9, 3.92036468557201*^9, 3.9203651982400675`*^9, 
   3.9203661247142115`*^9, 3.920384413162691*^9, 3.920384594398143*^9, {
   3.9203846261130886`*^9, 3.9203846752343907`*^9}, 3.9203847219808874`*^9, {
   3.9203848177183304`*^9, 3.9203848545591574`*^9}, 3.9203849558725595`*^9, 
   3.920385415773554*^9, 3.9203855747270103`*^9, 3.920385725003621*^9, 
   3.920385952368601*^9, 3.92038612970502*^9, 3.920386193488532*^9, 
   3.920386250207306*^9, 3.920386514985004*^9, 3.920386655399016*^9, 
   3.9203868296579742`*^9, 3.920386888342086*^9, 3.920386976412861*^9, 
   3.920387039071849*^9, 3.9203912571899004`*^9, 3.9203912891842217`*^9, 
   3.9204585018849926`*^9, 3.920458558117981*^9, 3.9204587303291645`*^9, {
   3.9204587830612235`*^9, 3.9204588310586443`*^9}, {3.92045919184846*^9, 
   3.9204592207702646`*^9}, {3.9204593139394846`*^9, 3.920459326947955*^9}, {
   3.9204595355440598`*^9, 3.920459538278356*^9}, 3.9204596152861185`*^9, 
   3.9204821428066683`*^9, 3.920538587427484*^9, 3.9205388099816666`*^9, 
   3.9205398564931927`*^9, 3.9205400371888437`*^9, 3.920540092034051*^9, 
   3.920546296183648*^9, 3.920546348178813*^9, 3.9219355704963045`*^9, 
   3.9221809901820526`*^9, 3.9221810300943947`*^9, 3.9221813794727507`*^9, 
   3.922181624089197*^9, 3.922181767032029*^9, 3.9222016265379105`*^9, {
   3.9222016677188845`*^9, 3.922201675075284*^9}, 3.922201766944654*^9, 
   3.9222019578635397`*^9, 3.9222025606627564`*^9, 3.9222026756262712`*^9, 
   3.9224582734050274`*^9, 3.922458303822683*^9, 3.92246002399391*^9, 
   3.9224602413071933`*^9, 3.9224603461291637`*^9, 3.922460398535016*^9, 
   3.92246059433921*^9, 3.9224614882821946`*^9, 3.922461660317608*^9, 
   3.9253013337462854`*^9, 3.9253065784818583`*^9, 3.9254751184851265`*^9, 
   3.9254756184325457`*^9, 3.925482033824218*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"56311e7f-43bc-4261-8099-425f3e0ccdf6"]
}, Open  ]],

Cell[TextData[{
 "U=U_0/x^2\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzs3V9oHFme6Hmxy27ui6juh3wqkulFLH4wpscwGDNmcevFpuiikG+xLq57
jN3j7eqxwHN157ZGmBoWzWDRdGuGktqX1d5OcNGF1Vd0FVaBtsslTbc8We1x
SbhKki/WNdIYa9Da01ZdJCMNl4R4yY2IE5EZ/+NEKjLj3/dDUVhSZGScExHn
/OLE+fO//um/+zfv/g89PT3/4X9R//dvvj/S/xd/8f3rb39D/eH/+PP/cPWH
f/6D//ONP//RD374g784+af/o/rL/1ndtv4/9fRo/24AAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAABDd0+qpHsOp6tOkj6bzipZeAOlEWeSW2jxJ7YEBAAAANmrkakasehA7
tJjwAXVY0dILIJ0oi9xSmyepPTAAAAAgyOJQsYLXoqUXQDpRFrmlNk9Se2AA
AACAQ9Fi16KlF0A6URa5pTZPUntgSMTz1fn5+fub+0kfB7KDawYAEqccbK/V
1NJ4vra2tVdP+mjaoxx8/eRxeG2STC/0+gs9f1efu/6yv3l/3kNs9SK97jPA
//Iw/r73ZEm/LJaeZPX2hC/z7NbWtg+UpA+mLWkse/XHCzePe0wu/5WDzaUO
PLCktnxO7MCSqysRSGv0K+5ETdLlSTOYzn5lffjngmJeM3L5lv16H0AGPP34
Ql+px6LUd2FmI2uFjpgvMrQ20TfrZp2jPhrcHTt3tFdkrUfMbJno0iqmY+x6
ehFJ6OWh7Hw+drpsvT9LfVfntrN2e8Lb7krVXvr2nhx7sJv0UUWUzrJXf7xw
s99jysaMK/8/33HcXfUXX9y+Zt6E8SYgteVzEgeWcF2JEMV8YDfJlCfK9sL1
k71Zj6WFeJ4LinfNSOWbVL0DADHQiuFS+fi5wZGRkcFzx0UsWxldzlaJI/Og
Ibbp3svJp7++ZtT4pb6+SlDgWu5/d8TuZu3l4b+/y+lFJDKXx+P3j+ohwOtn
Lum3p/EEdGz8UbZuT3hQNqr9WmlbKp++ZCl8S/23shUTp7HsNR4vjr3tKFdH
Pnrc2mR3cajSur2ad5el8ttf/o9vGsF4b19fOd4HltSWzwkcWNJ1JcIV4oF9
dnbW+w/h5UmzODmqB9OXzryuX9GV4VoWe5rF81zQ/jVz7969V69eRf9c0iTy
LbzeAYC4PF354oWlR6GyMaVFeOXRZYnP1ve2gnumBo0zsQzXNbrC++5GGw6w
5NX9sdmB+8PBI+pRHxn80LcrrV7ddDVwfTkzoLfjVx/uKOI9kF/g2m7kFJT/
3U+vXei1keDeUkHq8lA2Fu48tLzi2Z27WAq+PcUt4RjCIPqa+w4HQwJefnxe
PZWVoYXW6TWafcrvPQiP9ih7g4V+p/LgPa3VpjK02Ow6VV+f0pvd3rhtHv3y
aFl7zXr97rO6ZIclq9SWz6k7sGTryqT3Fq84j625L/Xun/1B3ht5PtB5/y30
tvhqrKK10E+tt/LceJpvFScB0nZFtf9cEM818+rVq8uXL0f/XNJC802q3nEg
qAMQm/WffVutrIZrwVu5BhqoEdrHT20bTL5lH2dSfmtyxTIUwWjkX1mZPGvp
4dp79patb6M2XsXWA9b2RT4duA2tKjmZbvH7j35nPqDHHrgG53+ywwBCr40E
95YiMpeHi7IwGLyp57Oo/P7RJeJEnpjasP9WjwBDQmnKXglhD2XK4pCaQ6Ur
n9oC54PfXvum+rmBGbNzyNMv7j0TMXu0Rp7Uls8pPbDk6spk9xavOI/NtS9d
fht5QloVwsqTjakT6gaDC/bm+ee337AVJ57SfEW1yDwXxHvNjI6Orq6utvXR
FHHkm2S9Y0dQByAmouXZWQY57NeGK6I2EiMNjK6prfJGWR6tiL+LfouXjCkN
rEMR9DKq1NtbMndjbmQt6UQlWSr36eNVzP6PzS96Wbspes2+26+1jju6cptd
aT0eR7odq8QbuIbkf6LpDb02EtxbasnX1/tzF3sCYy3igWzYutXvdV+K89t/
a8vvc5S9csIeyh6NH7E/lCk7D6vnK8ZTlsf9FaGRJ7Xlc2oPzKqrdWVEaa6P
4jy21lBSc+DJCTH4KL+NPB988IHvWK1GeHlSGy55baAXM0FNI2m+oiwkngti
v2ZevXo1MDDQ7hGngyvfItc7GoI6AIdhrBwwW72uzUBQOj4aPPnn+uSxHmfP
VK2sWjHLIPF4UB64vWEpyhb0rqutoQjmTHaV8815yYzBKK1yS+/F7XjdXX/x
xYqr0mijL31XBQeuzaEOS09+L9FXNzT/ExTvsaU5pXGSrq/FHRI0nod4ICP0
p4LSxTlbUavs/OqdwIKMsleSnsTv/kSUq7W1ra8dK5jYZouoP7s7fFxv5TKm
3vF4pSqfzNSWWqk9MJsU15VpzsA4j00UIpUrtin+cz4nT0h7Qlh5IhrtnbPl
1R/+zZHAmjfNV1S054KOXDNDQ0NbW1vtfjopQfkWud7RENQBOAzrygGv/dFf
/upx4ETv+jwFQQONRX3n2kC8pG4ORRBfemrKOkLAVZiJ76pcubMZvMpgOh80
WoIDV7veo5dvrweEr6H5n6B4jy3NKY2VZH29uzCoZkhpYCYgQ4gHMsIYm9/T
e/JadVaEhM2lhXwLMspeWe7VcErl05YlTMxgW3uRKoYYaFPCrOz6pkY6makt
tVJ7YHbprSvTnIFxHpto33XuK8+NPKurq6Ojo0FbhJUnRiOHWoq8OTatPeJP
T1xqrovpW/Om+YqK9lzQmWtma2traGio3U8nJSjfItc7GoI6AIfx+CPRx77Z
wbJ0fGzZr1+meIwIGFAgSp8j44+cv7ev2uFVRrkLs90Ho8eN5U1eP3NpYnrJ
+4kjnQ8aLb4FcnPQg+ip22eEBQEP8uH5n5x4jy3NKY2XTH29uzjcV7JP2OeF
eCAzWmVb68FBrC3kNzafsleaWafZ6jXLEiYiowYuiEmHxNzK2u9Fag7Rkye1
pVZqD8whtXVlmjMw1mPTOxm6JgbLcyPP6OjovXv3grYIK0/0dbHNYTdNooOG
7xxrab6iGtGeCzp2zfzhH/7hIT6diKB8i1zvtP5IUAfg8OrP7lzRqqpjk+ve
G4gC5+Kc/+BcvfRxTinaaO9Bo6Gv/3Kveu2MWa2W+i7MbDgfNtL5oNEiXyDX
13+mv6/0rfnD8z850scmlR9Se7O83k3v6Q8Tlh3KzoJUC09DNh7IRa7lQf3Z
0vSEHhFOTNfWXtT1sN/3oYCyt23Kzl2tG1xz2gMxh0ZPc00nczsxZ4JvP5Lw
ZKa2fE7tgTkkUVfGVh/ZOnx08QEs/NgiFPnehYjzgT1PdUj0lgRneWL+9vFn
1RtacX6jOqs1iuvFjO/EyxmKcMKeCzp2zWRzxFaTM98i1zsagjoAMQosb4xl
YTxeFjs+76q6xLzyjiEDEg8aTfUXa3fEEFZXTZP2B40ore4haQnP/+RIHZuW
F0NVLZEh+SGxNzWvzIx6KrHHtAq8PJTtOS1MKPUNh7bwNMxu0/arZ/fOO7b9
62dA/JDlXMshfWac0tCiT7d4yt7DsKVa3CevvfPLZ7bRPmKODK+nMtlkprZ8
Tu2BOXS7royzPnLtt1sla9ixRaooXZPDNpprQTezOic1r+bVq1ff+c53on8u
/EJVHo0fCyozshXhBD4XdOyaGR0dff/99w935Mmy5Vvkeqf1IYI6ADFQdu5o
U3D610zGqiv9Vfs7XWVnx3gGFU8UjikfjALfOfln8IPG/s6Oc8C9WKrSWYKJ
UjBoQtpkRX47GbCOQWj+R/7O+IQf2+KQfnql6iHZlDZ3ndWqzf9UKRu3tFWu
QydDd+zL0k5QX5/qL1lfLGtZb7m7te0z8ISef8rOw3HtTPn2oWxQ9rbPfPPe
zF1jhurBhV3LNnrV5z1HhnRbVmrLZ5kDS8Hb4O7WlZ2rjxzlbIdFObawitKY
wWto0cxW4z2D70WR3ZpXc+/evaDF0725yhMXow9H4IpUGYpwQp4LOnbNzM7O
hkyXlG7OfIta7+gI6gC0ZX/z/nzLbPWGMVlcZbjmXzOZqz5qiz5OWCaZaxbZ
4gWGPgnddX1S0emxN8UcY5bh8zIPGurP+oKM4lv079HHsrpLQ9ES3tN78pK5
7fz8asLT2RmT7Gt+8l3t6MzFGebvb+67t1FTN2hMvWpd7tgtNP8jvJ2Mm8Sx
6eReNsjuTchYqBl+eew/mtSr8m/2j87MO7QuIQfjMa1yRpv/0bzxLPGAPRww
ts5QtuVHs/BVy11jgXJ3vO/8DGWvFGvF1qrWbPWamZXGzNez1WtingTLNBvW
3Xw4qL2PbS7uFJDC1JbPoQeWXLeBBOtKXfz1UXfbeCIdW2hFuf/pFb3IOP5n
6p1hFCCV48fL+Wzk+eCDD0Jn95UoT1rX5/SEsRB6+ADrlEY4bTwXdOqa2dra
ys5C6jL5JlPvOBHUAWiLx4IVauFjXTTAk7Ixc6FVzgilvp9+1dpge+6qc4Pe
s5MrlgpP5kHj5ScXep2H5zkvRHNeWqukCzn3ggymVgrd2/SevL6wHfJSPCT/
o7ydjF3otaGTPTa5vUXZY2qEXx5ed6f7EnLaXRyyzf9YOT+zMNWakUXbaetf
6j+7/TQCg+P0qnF++J1P2SvHfeuIRUxsGxnd5GwbXbUtARxwBwYO00hr+Sxf
nHb5yT2xutIQX33UumS6fQ9InlyppD792DaJsFqHbGxon/OqKDJX8zq8//77
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
C8kgazv07A9O/O2Xcg3S6c3bCOmN0ACfxvQW7cymREi2x0j04D/xN1/sWM/X
/qdXSj7vfGwDvhut6r5U0v4vltPUHxIs1b4ZNeib+I8Jj3rjJH2WUiHo5B6i
IMp09oYkLLnyObUHlhURMjDj9VEHUqosDKrl75HxR0E71sruoapWyMfXyNNI
X/Y2haQqU7dk8PHINvJkKsnZEp75sUhVUIfcSUtPHsuEzOJTzMmTCsXpRF00
nNkuc79x++ixx2+DX7+JdzjN8dW6+sqPtfk5netnCiIesP1tZ+7Sa2K2viuf
6m+JxZtg69wPyn/522+Ll0uOhT0BIH7FqY+kU6q/jHeviKPs7Jjzpxq7ehp7
Iw8Sx3CtDCCoQ+q1PydPI3ojj++cPI7N7A07zMmToOKEXkXDme2yOIZvN8zR
2D2lvjfHpufn56fH3uxrjcn2IFZosWx/7mhzLj5j0U3xzkjrLXytOjs/P1u9
drrcXLaBRTcBdFpx6iP5lJorqGsLqE9opff89MQltWx2tufQyJNDNPJkAEEd
MiB0dS2Phpp2G3n8fpRr5EH3FSf0KhrObFbtLg43l1UwxnKfnfRfHFPZuNVa
YqE5+Pvan4mwQgzadu9SmwDwmljL0xz7DQCdUZz6KEpKlY2ZC+6S+adf2bei
kSeHaOQpEoI6dJK+Tpa1jUVr4bG02Fh/1PreNDe2Nr9INfLYhmXpu7K2ETFc
K33qezLTQSB7OLMZphxsLk1PaB2Bb1Q/W3tRD9u+/mLts+oNvefwxPTSE+1t
U2P3wc+1n/9qevVf7bvU97mtXRzKxif6h8b/frvjSQJQXMWpj6KmVCuZZ0Xp
faM6u7Tp/jCNPDlEI0/BENSho/R2leYYKOcsPa2/fn/2S0u7jfF7c0V1iUYe
s5lI/8/edGNZk912ADTyAAAAADY08uQQjTwAUsS7kScOxWvkEfNq6YrShbkN
ecwlMVuaIWLUlgp5PCkt+U4dPHHS25O9fGtrKeocKnI+ZDLtWW/kyXzYo4s5
Falq5MleYR5FvlMHxINGnrioJY5Z0rRTeRdE7nNJXxs1Y4nK90nJd+rgiZPe
nuzlm1bgnjp1KgNH2llFzoeMpj3rjTwWWQx73OJIRYoaebJXmEeR79QBcTEH
WzkGZx2SPh2Qa2BXgeSjzuu0POaSVt9k+rVCHk9KS75TB0+c9PZkIN+04nZo
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
x67UJCcHgi5xZefxZ9UbWgPOjeqs9gJEfyr2awDQGA/V/s0AWbn1vL5eLEf1
B+/eshQ2toU3HSsuGtJ9h9afLU1P6I10E9O1tRd1vRnHd+JlmbRYe+518QSK
Q3POFW782vualSptEkoOAAAZo8/cGFRVipHVHh11HLtwxRnK4lDJNVxLopGn
qf5i7c6w/mLL9QSS1UaeRliGh+e2Ifmn3W4KzjTRydt+NezeeceWQVp+WZdf
K0rOdZstAvfimfFSl71+CqspOHmHvoXVK9C8WlNwMQYmR/zR/qRmrLvevOHS
lZysi1CyK4/Gj4VWgyF1ZVZuPf/4IYB3qjN1h+oTF5aGFn1GVEoHDIKlGuw4
n0MLapaSKW2supkcAAAyRdm5o819HBgmGiteibUrrB/dMSYIFK05jul2jKrZ
OfFycCPP/s6Oc/IAsXSssyIXj/WtnWdGaIaH5nYjFSF3V4Vmmli5rRUI19en
+kvWJgXtQrN8XNs+ky2E6WcOBbJ6W5sZtOfY26018FzCL/vFIf2MJd+KEMst
bJHwg0pIcoyZ1YYWzWcyZXvuSiXgCZrnrkOSbeQx+mCFLPRm9OQJ2Cojt55n
Tx7r4LQRj4U3b9Y8+zhl5Q5Vdh6OaxVZUE/raGlxVISdJaI0Y4lF87gCmmyi
lzZdTQ4AAKm1v3nf0q15tnrDmLnRMkWq9+eMJTq1FTonLJM+NuMe8UJRnxTy
uj5j4PSYtmyLfSoAmUYe9Wd9jj7xLfr3nNRGbbmnFRRLSvT0nrxkbuszECRJ
bWV4aG6nIuTunHYyzXijWzmjzUlqXnyWRh57LGhsncO8SymZx9bQy97Q5cu+
M7ewTTcfIdtIzv6nV/Si/PifqUW7cW9Vjh8v08gTJ2PBM9fgRuuIo+Y20xPG
KtnOJ2jbftTNzIluLfMSe0jpraeRyRYHqU6+ab1Dm/enemsOnjuu35uu9hvn
ZyKkpcuNImbZ4YwLnVet+xNypQ1tPAAA6Lw6N/eeHPs8bHktfc7HC60HZ6HU
99OvWhtsz111btB7dnLFUpXLNPK8/ORCb0+P83s85uRpNHYXh51fmLpHizYz
PDS3WztPXZIPr61M210css1JWjk/szDVmhFK22frX+o/iQ67Sa5vQiov+47e
ws0v6Fp62krO049tE/6q99bGhrYfv8euPJZKneY/ytFnLhJ91azqivNZ2b2f
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
jTD/2PijVilhPKyZRcnIyKUzr+ubVca+6sBh2z0aPzW63PFvyYPONvLkbaRt
Bu7NRppLb5+iu0WUGuVy2ZG4l7WbIx4u//Fr6nbBu0yZhAOAxvOZgVKr7LbU
k+c/NnNxd3FIv7h6j+pFd7PgHq7ZmueSu8wo3gG0q1AdjLs6/jerHYwL5unK
Fy8snXOVjSktKCkHVqr/f3v3GxrHmSf6Xu/6lcjMi34VmgmIi14EMTEMxqw5
ePqNTZgQZAIyeCNs1kzuscCXPnC1xuSyiMUizGgXS5PL0Z5tkNlgDSIJ0oDu
OCMtI29ncxwJT/TnYl0jYyzQyhMpeySvPDvbc+q86FtVT3V1/e+nq6u7urq+
H5oQS6Xu6qqnfs+vnnr+WBOX6hiO1aeRDJaJZtZls3OyX8/joJEn+xtmYVRe
PV0NehtzcIpzbIrZ3fyTkX71UPWPfGLtby6uCZ+nlZFel2qWrT+WKz46VHxH
aRr357khbSupt/Wc2UM/bvWu98YpyyP9E1uuHx98PqRmnLnCcm2XjSw0KzMH
ROeXkHYUj4psCdlZnreWjaPF4YwjSpRG1Z/0f7RuPfRH85eCWhSiK0VqGTk9
vdPQn6RUC0N3JapO0VybhqRHb5/QXfu9vuu5wsq81AQCRotQd4T3SnsSgN2Z
vPqWl+Zt/XbWP+q3fM434znt2cj0dm3/jWaft+/VikOcxYzwDiCsFHUwbtf4
32R3ME697V/8UK3zR0sBm4hCNry493Dc0sk30ze60vRYmcHBwZcvXzbxBq7O
yWqS/Pkz2wZT79pHnmTfnVq37LieTp8trq9PXbAUz94LM7b+y9oIFvvgFOsH
BXY397wmWnRJnmz9czUp87tNOLl/TT0cZ6cbGFfjGWVaNNXX1kT/yLJr19S8
T/0wZ+qnPPwwW6+FMpklpHURW6KEuInDb91U/1vHDdj+vbfdxaQmwlJUf1gI
dC0M3VGMtOXatEl49PYO3VVmE8+R3IeLaGJtePCUyCJUaVlXXn0/7AdN1JLV
D9uZPq3+w3mexMGu9ZmKt5gR3gGElJoOxu0Z/5v4DsZpJ3ryZIJnuhOFLJcT
4zO00TJXxIwdmcG5Jh8FNjfr8klpNGfkbfoYHqPrca0MVmcAqI4qMfbbNshH
z0Myvb0Zx5ezdRMXSVAm2ydKr9EJ2vwgs7v5B3ktn8rmP7D2Ov/ssXvXW9+5
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
saz27PvWF8/LjQ3NsRDNNG/fc36vgALT0DYGyUMqEdPUAHZ6eqfe10KL65GK
f1Uidxrrxq5vxnNaWJq29Cg07vLcpdVDEuJSm+qRo4fzaoio7fHWxECPrUpW
Hn6o1dFqNWO2+5S3p/UmGvexPvh8KKNtu1w7b0Z7jrW+qH9+G/pQtySc3wTW
OzJ5YGlUPUn9H61bz+vR/KV6dYDxuMovqahb38kFBGVned5a5I4WhzM9nk8x
qqibAABtIzKD4cU92xiaTN9oLRsK2b2+oj1s6B9Z9qplT7b+uVo3+lXuJ/ev
qfXl2enGOsyXv/ip+m75md3gzVw9wNVM4/Nntg2m3rV3w82+a+t0bkxiub4+
dcHSo7f3woxtf7XuvPaextYPCuxnXDsktuw89F1SXWYTz5HXOZE/HdW78R3F
3RggfjIwtW374Kf/7VxwZqRJ1CmzqPdE1bPFpPXD8urZ/sUP1W8+Wqr95NnX
D4ybt5CNPOJGy513BxWYRrap7anEIZWMaf7DTWHT0nqkElCVSETE+rFrZ/q0
+ibODxAt0nWeGCQnLrWpHnESx9b8YPVuXj0YGceEIq9+e+P7HsdavZFVf+q8
lzUCiVlf1D+/DX2oXXLOr10i6h2JPFD/uaPSEBdmUCQRW0g10AqO+i5sQBAF
NuAIUjcBANpGVDq5nOgSq3WJNrpYmwNoPPILyUT9ZHG4/rMGn8pd1JZaJWY+
RZOYK1H05HE0Irh2qzSaM7Kxc5ZxXrVdqM5L4+p0bukjru92prc34zhsthTA
6LeS7RMdyI1+weYHmf2MP8hrjxmz+Q98xhvYToF8Cvb4M+/BVF4sTTxe50T6
dNTuxj0SGrVAOHL28vMvRk8ZGXJA01zyTpkpzmS7kQJgI55sOm+KqsI18vhk
5oEFpoFt6u2f7ZDKx7SVgk8HEti0sh6pBFYldZsrJGKX3l3A/SZbE/2Olk7n
biUrLoWsRypNRBLjINaCu/in5fZZm0tnyJgHznmsd2fyXsVE1CPVt5Q4vw19
qPWDknV+rZJW7/h9tOjL1ZMbqs7bp+zM6WcuIMszWgELK7JNIK76LnRA0Etm
wBbUTQCAtqlWKZn8hNnvtKFBTwF2pk/Xf9TgU7nrj1J+8PaQfVo7r0kcqz2Z
ZyevaE/CckN1ZsvcnhrocfbE1ZK+9WpFKvKt7OC9HUtO6BxTVJ3u0/JxRl/d
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
OHn6lehY/clIv7rP/SOfLFnU6Zdde/vlkf6JLbltZSTgsNhy6pYl2OqNi/50
v/joUPFdQMXoZJYb0raSelvx9Rx96fXjJn3Kq5+9PHJ6ekdiQ9ey3X7d5PWv
SRxEGjxb/9o6kamyM63dWGat96zKzvK89bo+WhzO2LehDtLfnjqIOiiYdB1U
oRoCAERrdyZPrdJ5zCaeI/dCpWrWo+bSGceg8Fe/vfF9dbvg54pH60V7B3s1
j/r8mW2DqXft3fSz706tH9U20PfmbHF9feqCpYt074UZW39/rbv/GWsXatsH
1Uase5EtjlsT/SPL0Tw0Tshh8dkg8uv3ZOufq1mzX4J9cv+aejjOTjewrKnn
s+Fwq/DKjZFwLdvt002e/vFIte1f/FCNRKOlgE3Ue1rbhUodpKMOavCASUtZ
HVShGgIARK80OhDlsyhEwNLE45GDqJml+gNLcqkNSx8yJu8JyNVPSqM5Izs8
p/dsvnL+9V7rO1enAKr25b9iTMuQyc+YqYe+N5ne3kz1baobWTP7/Xtv62/T
J3pQG2MCzA86KH0sOlZ/kNeeBmfzH9y0+Oyx1DE6WRyWe5RW940SeljasrKJ
TwIs7vm0JNd89lx34tUIE2z1z3weoAct2+3dTd7jroVMG+khevI422sc1Ghr
q1yog4yjQh1EHeS5v43UQRWqIQBAKyhbEz/KFxt4GoIWM5p4Rksi63blIMYT
O5EBlJ9/MXpKT+V6+/qyPQGPUbenBvSscHrb2lf/8NF6NZUQ+V928N6OJXVf
1ideyJqLxFYzmNyQOVen0Ze/tod6X+see/pbfvH1uitnaWY+hJ3p05HMeJnY
wxJngq0e/J6eH7w9ZJ+ctaf3gu3Rsnt/o0qw1c9v9An6SoGkGRDEEJWlheKt
d/oyPZlTYw99r1uNiGW1cEcdpKMOog5qBHUQAKDN9KU0Tr1zq7jQ8MhkRM7R
xBPQyKM9PBU9vLXB6+tHwXnZ2piWfgfMl7A7k/faQDzDNWdjEHtj7yPt+mDx
Wblr809DPFiTpO5IFOlltx2WiPkkwLWHlcbkrLVHy749AqJMsNX36ojDAySS
tbfBaz/6y08fB01qcrQ8ogauzODcvv3vqYOog9qAOggAgGYYU/HRyBMvo4nH
ukKJdyNP/+BlMbK+98ytL57rDwBFBuPzFFXkifmZXd+PFm/r7oFsX/DBKyNy
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
jcTzobF8zeTsbdsDV+gYchRPMUjWi+MT+Apb2pN0RYf9RPMq+7c//LFzXidh
X+3/RF68Ynn92x/+I+wrSRdm+F3997CvuM9sew5s6OPT/lOpvf495OvkD/8R
9tX+C7OpazNkMWh/wWvmlZyLuokSy4tXHNdX6IuriUIb/mu2vf5KSzHg1ZpX
G2rzCF+hE6dkldjQ1XT4rxlf4v3v/1H2ef0p7MvvDeu//vDHdr/+PfQr9Hfk
Vef1p7Cv8B8auhiEL3uhdzWOV/hj2/bjE0MoaGZv236ZtD/iNVd+/hTylaBP
bOr4tP36StYrOWczdMbVRI35p/DRMvzehj6VMRT1GPLD8F8zdBlo5hW6/CQn
fw59RmJ5xZA/NxOC2h8NYri/SMUr/BmJ4RW+fSM5t4pmlP6PP/3Pznn9sf2v
ctjXn5Swr/B7G8eBDfk1Yyg8oU9lOYYz0v5TmawPTdAZiefAlkO+Ql8jCTs+
4T8xhsDe/pMS/hNDv5o5KW0P7DGckWRFvPYXg9ARr5kLMznl5z+0pCvMK5bj
k6jLJOSB/Y8m0uAkfc1YKoVmPrS9u9rUZVJWQr6aKglpeLU7Wsawq9U6pfw/
/1e0rz8pShOv/xXuVQ77+tP/VMK9mjg+4V+hv2ZZ2+H2vpTQr3afyj818TXD
n822F7wmzkgcHxr+jIR8NVPa/6Re16FeTUTa0Hvb/k+M4fiEr4NiOJXhj234
MNJMNGhzDAl7Rv7URG2bpOPTTGIQ/hXya4Y/IzFEvBjCSBPHJ/TFFT6MtD/+
JCnHU8KXn/BpcNvLTzNBL3wRCp/mNVlTJ+T6Cv1qe/3V1PUV/hCFTfPaf2E2
fXH9/0JjSU4=
     "], {{0, 310.8}, {916.1999999999999, 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{120., 120.},
     SmoothingQuality->"High"],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{753.4799999999999, Automatic},
   ImageSizeRaw->{916.1999999999999, 310.8},
   PlotRange->{{0, 916.1999999999999}, {0, 310.8}}]], "Input",ExpressionUUID->
  "8c38b6ae-1901-48b1-bc15-c2d142369d78"],
 "\nImaginary terms at U_0/x^3\nConstant U_0\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzs3W9oHGme4HndHVzeG1HTL/JVkcwc4vALY7oFgzFjDrfuhU3RRSNvcS7W
jLF7fF0zJXCvdnc0wtRwaBuLotvTWGovp9vOw0XXWb2iq5AKtG2XNN3yZHWN
S8JVsj1YY6TxWYPW7rZqkY20LAn5Ji8inojMJ/4/kRmZGX++H5qmLIUy43ni
ief5xRPPn//5z/7Vv3jnv+/r6/u3/5P2f//ie+ND/+bffO/yW3+g/eN//8G/
fffPf/D9/+ONH/zl9//8+//m2J/9D9oPX/13fX2n/se+Pv2/6wAAAAAAAAAA
AAAAAAAAAAAAAAAAAIDlSfl4n+l4+Umvz6bz8pZeALGg6nBLcp4k+dwAAAAA
xEOL+61433gEGF3p8Ql1WN7SCyAWVB1uSc6TJJ8bAAAAgI5YGc1X6J+39AKI
BVWHW5LzJMnnBgAAACAueYv885ZeALGg6nBLcp4k+dzQfc/uLy0tfb613+vz
QHpQZgAAqVY72HlQ0dqypcqD7ZfVXp9Na2oHXz9+FN4W92aORvW5kb/3n7l+
s7/1+ZKH2KIK5qT0gBEYunlcfmHvHyvxXnV0TvXl41VRV+4c1Hp9Mq1SqS27
XXWo3zVql6B2sLUa902V5Oo0b00bwuidnDldaE25MmnEvquP0xr6StqP5LNZ
ZrT2bltkjEcZsJoTrQh8nd4mHQCghcIfnx0o9EkKA2fnNtNWtYvVckPbYuOw
brbY2oPV7cnTh/tF1no8cUjL/MpiOseupxc6IzB083ngfDY3XGCh5zTYWy/b
K8v+Y5N393p9VtGp1JbdrzqU7pra5pzrEny262iuqs+/uHnpRLEQ902V5Oo0
b00bwmWzg0KJSmVS21m+fKxf+m0qQ9+GeCL5rJWZ6tPbl62mwF0G9td+bCsB
qW3SAQA6vRErFAdPj4yPj4+cHhTVf2liLV1tu/JjWhdfZT/51SWzwSwMDJSC
Iv/i0DvjdtcrL9r//i6nFxYjMDzyluOajn/0yONY0aVVLBazFUtmT22zPKRX
joXiifNSXVkYupG6ixZaW/ak6lC4a/ZWRo2KtP/1k+f1S2B2qUjN1f7av3/T
fLTrHxiI86ZKcnWat6YNSrLWQeH2yuDxi/DKpFGXHDZi3/MnXzdKdGmsktKR
hPFE8q2XGe8L0VPWNdbyZeCokTGOBsWoo0Rr0iwCheE5vzH1AIBEe7L+xXNp
nHJtc0aPj4sTawp/W325HTx0WxrY6zpAmrxvThTx/Rh9ssyq16DqxgyHD0cO
aWd9aORD37HmRmPd1UeSF3PDxtuy8r3dmnhx6Bf5txp3BuV/99NrF1o2evhp
naae90aXVmGovDwT2ikryrpj8o6YZeE7rxGxefHxGe0poTS63BwWZHZzFd+7
q/TckJraskdVR+jX1u6+p/dSlUZXGq/SqxszRk/jGzets1+bKOqv2y/fflpV
HL4r871GSa5O89a0JeMD4xLziTU+Trv7F76f9U6tiYmJ+/fve/wi9J74arKk
v5GY2WjmudkF0qxLAiSwOLUeycdTZkZHR7e3t6P/XceI94WFwTGtLfA55MXD
e1vyjMO95RG9iRme8+14JwwDgDTZ+Ok3tZZgrBJ8lGsmjhbifvzEdsD0d22j
fgvF706vSwN7zVdC6+vTp6QBwP2nbthGTNd2P5u0DxCWv8hnhoOpGdP0Zt7I
/sPf3jMfgWOP/IPzv7fzZELLRg8/rStUnzKtLq3NmsLzt+chvuUK8aotj2gZ
fXRm0/5To5sl/LkhRbVl76qOsLumtjKqP6NcvGV7njj4zaVv9MmPIU++uGM+
w0Tr1Aq4RkmuTvPWtLUgsS1IzCfm+jhDdju17ty5MzEx4f27sMpkc+aodsDI
sv11xLObb/QFdmnoElucnFQi+RjLzKtXry5cuNDqycZvY/qI1jaPLEeaTFi9
rXfqDd3Y9juAMAwA0kO833E+OTjsV8asUb0npIG7zUq9tjZREr8Xo6HPm7Pa
5bk6RkNQ6O8vWB9jHSTHFCLKKBQHxABhc1R144teVK6LIcXvDOkvWBxzHaxx
xh4Pc92O9OKN/EPyv6fpDS0bPfy0blHr1Gp2aSk9fxNN9dL2jSGvC7S/eC44
Bq6nq7bsZdURdtc8vHrI/hxa271XPlMyHyw9nt0idGoFXaMkV6d5a9qiS2wL
EvOJNWdHWxPQjorJVNnt1Lpw4YLvlLewyqQyVvA6wKhjgvqBElucXBQi+djL
jHZFEjNYy+i2PHT1YXPkssKoOjFS68j0hu8RhGEAkHDmVjEL5cv6eiSFwYng
pRKNVyCOodv6E8a6VdGLh6vi8M1N6QFk2Rjb3ZyrYy3lWTrTWM1yb/GcPdQw
pjk4xkdUn3+x7mpyW5hp0lXBkX9jItDq498rDGYPzf8eivfckpzSAMbV/s6P
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
p1aiEYYBAFIl9tfZQJtEmXQMSK9t/YcTrvhIsn1jSCq81bvvldyxV2WsoP1w
dMUYDF/755vDBemlItC2BFenGRsZggzZWy+fHZAW2dFnOX0cQ9mkUyvh6NRK
LsIwIHe+vPKD68cb/yt/qfp3v/3y1+Z/fCL+9nsL/yz//tdl508aR2r/u/Jb
25HHXedg/fDnP/+n1tOG1j36yL3RMbKAK9t5+4vntLjo6Mxm4yfVp7fHrIVF
h25se//Zszk9OCoMzdx/LI4ujTpXKK2tTejvGUujtx9/UdZXM5XfQgJAh+Wk
BYmQzP3KmFhYulA8cX5cc/7k6/3xDHSkUyvh6NRKLMIwIF+MXia568noSvrk
10p/+Mmv3f9t+xzbJ28u/LzZQ6X/SaO36p9/Punq/hL+6Tffo1OrV1ZGeQee
TVzZzrMtZV3bvVcWm+kUBgZKQe8IGytAGAcPji3veMRJeyujjZ15SmfK6659
eQCgY3LSgqgnU6wsrT0Fy+tPa9X+OiO1so9OrcQiDAPyRB+jJY+YEvT+qMnf
bHr9QVNQp5YY+vXz79m6qvQfSv+UO7K8T0NHp1YP5SRwzSGubKi/v3LI4crf
e/z0X/7HbZ8PaERT1ae3L4utd/qPXdaCI+d6DTa1ncV3GzNYiiPLIk56dn9p
aenzLXPznb316VONrXyOz4i3g/tbn2vH3Gf0O4BOy0kLopzMtYliX8dmH9Gp
lXB0anVE2zFYnTAMyBN96JRn51WzK8kxhsr6p2MWob1TS/9Yff6g/W8DuqdU
fqX/h32K4g8Uet7QjpwErjnElQ1Vffl7B33ZX9dPvz7wG3BuLiR6RqyyUhg4
W763axzrseho429u6G8H+09Nf/HFjNiwx9ihRwyhF5dMzHIpDLw7/+C2eE9Y
mljTPvfh1UP+MRoAxCcnLYhqMsUaPL6TmdpEp1bC0anVEW3HYHXCMCBP9BFZ
3itoNfqjfDq16uHTD51/K46R+qaaQ7OkLjLnol6xjtT62c9+9u/y7csvwxZM
e/TReMNbR4pD7zT+Fby4xC9+8YteJ86DdlYR0msXnN7Nzc1eJ87m7/7u7zp0
ZbVP7nXi4hSeUTERzznmm8HbTxuTUuTQyK52971iX9+Rqw+NoMsc264v1HDX
GAZgRErGVj6Fc4vGq0NriHxpdGVzbjhwyeyI5TxjF70F+ak6Ijk4OOhEnmja
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
sfPvDOmvFotD74xLPnqklEf7i+fU3uUFf0p686Tz69b6hKPimU8PORvv2p1L
0rZUREVIXCqV+hz5WBieeyYdYRMUpsYYY2t/5jNKQXye94OQ9zSIiKkAEBMx
Usv55O+gNS22aooG18yVGBrcFGdLV3Y/THWb2/MGt06bCwAdUXt49Y+Hyv4v
VqIdhvwwu7TGKiLwdgUF5ktK0SRXn94eGzSiuf6BgWJfwJvjjekjRmA4syFP
x9i9t2617SIELA7f3JTiomVjlYZiYx9vK6QonWkst2tO12ieoTGcvs8eAVef
f7HuCiLaWeJjc+Zo+4vWZixPYuYTjmo539f3h2+csS+u3Nd/qvkqvaUiagWe
haGrjRkWe8sjgYU6UJwxtpboqMMUVkYTcRWBfBMToJYWypffHCj0FQYn7u4F
HS7q7mb1ToNriKXBrWcuW2KW6ja3xw1unTYXADrG2FVn8M3L5YXAKeWKhyEf
HF1aAZ1a+ps4MYhfX49hfS84NFub0COVgCVAtm8MeR0gXls3FhgRZ2MfBu/6
YvFdpYvz7tUZbNoJJrUTafu1adbyJGY+4WjzVam5uHLzVbo1AqKlIip+eej9
dVv+iHxr6VLHGWNrn5WIawIgGnlsx2t//Fe/fBS0aaF4pG8MVGn8PQ1uDA1u
PXvZErNUt7k0uACQbeYqlWG9VYqHIePMLi15uxrvTq1Dw2fFIgj9xy7ffmq8
8xQhhc8LNhEqDt3Y9v1q8bHuId/2HWO8QhR3LLN3d2Kw0IjBpmY91h71/kN1
K6NFtf1x/GUuT2IWFGAXz/1SPv/a7m359W5LRdQ75eKnQRfJl0KMLU1LCMly
3gEDqfToIzGhbOT00deNCqkwOLnmOeZob2VM7w6Q19qu0+BaJ9J2g1vPYLbE
LNVtrlqnlmKbS4MLAECKfTWpD7I/eeVX0i48P/qO3vx/50eNnYoqY+YQdHPD
HOuPxaIKgZsZB80fMIIPj1UzWgkm68aeRHfKl06+3t841znXJNv2Ymzfv7Me
YtxsG2BnL08cVPPBT1CA7c4UEXeL5542iqh3gN3S/MPQGFvaD9w4Nuh1MjE2
kHrVp/MX9Tb2yPSG4ze13WWvHq06Da51Im03uPUMZotDrttclU4t5TaXBhcA
gBSzLYLpRQ8BxFIRr739i6e2HazFWhV+kYhYaTRoS24R/LjCTbGpjmPYv0Iw
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
5PDB++jVg6OxfglS2zjQ2RAQzVKHFgM7gVmFYyOCXgMAgB3vXgd602ZR1ygT
f1ud24nsEv02EE0v2hihwZGOC0HVOLOBHM0O3MSioKBoqF+C1DYFdLbtRFGO
ocXAToBW4dyIoNcAgBhwuvvd4uLid7tivV0D68P3ijk42s2jZ/uAV+SKB5OO
6n4H2VrIkAyOdOcjZM8B1TivgcBL9kDgOluD1PoBdNZXWmH2IQdaHDPaqdc1
TiOCXgMAog/JLyg2Kale63H+cq+YzZc4jnb15UZZloD1Q+5dqic/PV9ZVLGL
RfVE+93K81dnHerTS2evnm+xZLBe7kFlGz1cX3TCXitUWXtIPCl/3b5azc41
rd+0vHHAqj+lfMiDyxv7Lk8WNulG7Dks8AyGmqnrPEdaOviBaSjmC88OiE1x
zEbj+D/LjL5DtPdgNBDWm0pnuytcx9ZLOxKw54Bq3KWBwEsWJ2idrTGlVrhv
J3Cltt7oPPX/oYLdcwavszQMz4cMiRlYa8SLLArprAavw/RyTSvMvv1EVovF
nHMxS/DQd/C7IC/SSfkIzObhYfjAfzGd9ul1jd+IoNcAgMjjLQLgufuV/2pw
wbEflcd9T8auvpXiT4xKlWfFG/pF9qM9Tlc/6aN/mUik+saWj729Y/vhVoJl
5iWQjRH0qU8UdK1IlW/HLqST1G+TXbcWDlyCiNUXT+6Y/8pc09LO7PUu+tdy
/X1bMd1UOli6Y6nkZNf12R3mk8VMujF7Dgm8TzR5SZ3mSEurhYyjoZiobj8w
dwqJ1KXJNVazP5zNJR2PBfLQezAaiP1Nqy+/f3Bbt3inCvLejlztOZgaF2gg
bjMWwCBgna2xpVagb1dxkVp7P8zvhUMKux5aobMqfM+HOsXMDvVC3mTxeK1o
01mmn8TsMD1eU2uF2bedKGqxmHNOELKE4+Uxa9/xYNsWZXLpgrxJ594js8U7
NA9hB8CtbzQ/uD16XXNvRNBrAEDUEfQ6VM+4kcS1udzskf2hX93WxCTZ1ZVh
6qa0U8wSWUqd6744NKryWZm6n/r2qXPkd0MXz6k3TeZmXaaWwga3EizetSWf
rT+o1dvz3qiFh1vGFVv33iIVoZb1sO7w9IxvskXyuJQnEYpkuuv81WHbPY0L
yF2Nm2YKq8ZNtShHMt2r3UCv5czYj4zHiph0g/YcFjifyBgUdcS3kspOp9Pc
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
MYLU2RpXal37dhGpJbECuYe+MjajDQGNcR7z9SPdc5oJLKh1Wsozo+eCsqjl
rkyk+m4X58kQ3zjYznhrkQ5TuFOtAy0Wp4OCWh4swQhqKQdhk+14qb47Swem
fF3i3n4dEemk+743fvVPX27ZPVq+A9DIi0GvAQCgXTjLEfmpYHIZJrI/5n7W
Bi+olR78kvYopMoTh/kOYx340MUu7YiTgUfMbpt4PbwvU5/ssEbXNOXk+Nr2
sjxeLvQmDU2cmGHki2y7p00f7jZ89fw5zeU1BwoMjksjXUlzhncr2hd9bMrV
Wd3+lMrVSco5d91wdLTc3+RP63Vc3X6gxrzkodhV3RkXmCnzy6SjbTDtD2pp
IS3a0rxkUN6ZVtKi0Floa7rPTbu7zALz1nsQyECTu5NBbLujezti36uJLtrX
Sm9krBRDgtTZGldqXft2IanVt7fRkEW1zAdHu+e0fkkwQS3HhEQqXmSxXjYG
2koZrX5FOkwPnar1/aHFInRMUMuTJWi/GqjPW2rLl0i3Q/mCQt6+hqB06n2f
0e8le8dWzarNdwA8vxizMKDXAAAQPLweuNl9EUL9Jy+oZU8TQiuhA1Ll2XjW
If14HT2LI3s8ynhyQ35RTT1e52nx9kV9LCGrun2LgI+eNj2Eea+HzvTgJaOC
rtv2dAVSZUnEnSBfZFvoTNsVydNidnQUSH4kI3fvtFqfxkpuYwG72yoxv0w6
2gYj5i9Rs5kuz/RsfuqxaomLd7+ijo763W+UJ2k7pjgHP1W3iw4RLS3fzC8+
nKZuaTqiynKOkIF770GVBj/1lmsFCbYj9r2a6KLhJLeeIHW25qkWbH27sNRK
la2vi3eVxny3OK8M8dUunPn20e45m5da9xbHjp57l8Xqi5WZCfXtJmbKGy+r
aoCIVK9Ih9lgpwotFsdvLa4FY6IeLYEEIhXq85YKZPGc9gmevH0P0klTfTF3
k5+M1cEBaGQYAr0GAIB24azljkfjeKaUFzg/lpdTy+6/sGbi6pjE0g5J9sS7
Awmq2J5MDuuzrGAX8IsMqi835kjeKJus+uhpV09+Mpj/4Py//GD8SyBPFo3T
B2qJPFgHudBXOhcz7ZWSpBVvXPvCvOGLZM3Qxd9xv4G2n4I16+WvSUfbYEgl
mG9Ejoavv6ry5vQpOzxHyrP52TdHWWA97XhN9T+tR1bVTG6/M5xyc+k9akLL
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
Sm/cuNHckUNxauPCQHc8w9YdK8xJWi0WM74pFuOIj916C2ppsSjLQcc6tOxQ
wuNgX/zq8KpNPht2rY3aVH35fXGgj63B3i4DoKOweCAEh21KWC5efwqWi7dk
uXhEcNrtk+ob+5Zz/CFZ62j/m2Wv6nP//n1jdda9e/eaHVwoU1ez5jNNVTfg
kx/rFxws3LJeQKeFq4m166M/Xk8lEtbnOASrZesrjVgf2EKDY+9eoNqIXGr6
cQ7M2pR2pi+ZP5lz+rSCb0aicVzKm94xMzC7NFWfZFBqqP5/8v9aZhnFkV+c
sULU0lTkscCdJU4JaMTFJoUHDkI2aYYzV2E2L1uF2JP7M8pEJ7x2u1rIMA5b
iQN+1ossOsYxJU0uDybEpY0LA93xDFt3rDA8dH4sxpG42K2noJZLaNDBtOVP
ebBtXVLkXh3etMlvw661V5ukzfFfCawoFLwMgE6iUCjQSzjkka9DDgQvxGjZ
bSNguXisMO32uVuctx5p6Uz15PnKopYxW0uZ3djjjcxavgwuFKSz3ZX54l3t
cxy2+1IXOL05WeloPnmUFJJppSN1F8Zz6pdWtsp6WdnvHSjCyzarLze0d7xb
/JpRm/I1X+vlxvte43q/jES/n56kfWJOvRWpFVKaxAGjgtR1j8wr5ZEe5xkP
o6lMzCyuPD/x8DFxsMnqidikSSNLiR2+1XwfpUZYX2sq286129OFwYYOuYoO
vtWLrDjvvPNOTZ0zbe4cbYo4tHFhoDveYeqOFSdLqdX++7t/U0rxj9yFww7E
wW6FtUnm+fw/y8/8PTNWZDJtticgVh3etMlvw661VZs2x/tFVi0IXgZA5yA7
HvRBzNimFARYLg7agtyWC4VCjZUlHgAhbC2ZWo/pkaPZHG9zOgD+IW63q4Ue
OPe+IcvN/v7++vo6UR8AGgK6A6JKwNok316koQheBkBHQef2xDalIMBycdAW
yP7i5pdfgphjaceNT5hjbhC0EFG7lXUSQ17/WF9fl73K5o4cAgC6AyJLsNqE
oBaIMfRBzNimFARYLg7aRaFQeOeddzC4AE2htmnNBWsyV95qIYcwN2gNYnZ7
ujAY4yzxgSC7lMbmdwAaBLoDokqg2oSgFog3N27cIMNe34JaII74uFwc+MPr
16/lGsHgAjQLlcm9qSYtlfIDiCCAVuFut7JFZjHe9Zf79+/bDyECwDPQHRBV
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
AAAAAAAAAAAAuGb/AmfJSzE=
     "], {{0, 297.}, {964.1999999999999, 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{120., 120.},
     SmoothingQuality->"High"],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{827.7599999999999, Automatic},
   ImageSizeRaw->{964.1999999999999, 297.},
   PlotRange->{{0, 964.1999999999999}, {0, 297.}}]], "Input",ExpressionUUID->
  "afbf6ac4-42bc-4cf4-81a5-41163601acf2"]
}], "Text",
 CellChangeTimes->{{3.9224615997899723`*^9, 3.9224616193815804`*^9}, {
  3.922461728268844*^9, 3.922461743388277*^9}, {3.922461845316553*^9, 
  3.9224618590458555`*^9}},ExpressionUUID->"d394d6ca-8dcf-44d7-ae7d-\
cbe96c3cbcb5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"2492160", " ", 
     RowBox[{"b", "^", "2"}], " ", "U_", 
     RowBox[{"0", "^", "2"}]}], "-", 
    RowBox[{"75392", " ", "b", " ", 
     RowBox[{"C", "^", "4"}], " ", "U_", "0"}], "+", 
    RowBox[{"569", " ", 
     RowBox[{"C", "^", "8"}]}]}], ")"}], "/", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"4096", 
     RowBox[{"b", "^", "2"}], "U_", 
     RowBox[{"0", "^", "2"}]}], "-", 
    RowBox[{"128", "b", " ", "U_", "0"}]}], ")"}]}]], "Input",
 CellChangeTimes->{{3.9253037348331313`*^9, 3.9253037775139537`*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"2fc99b40-ef19-4700-b403-44a0aa6ed7e0"],

Cell[BoxData[
 TemplateBox[{
  "Power", "infy", 
   "\"Infinite expression \\!\\(\\*FractionBox[\\\"1\\\", \\\"0\\\"]\\) \
encountered.\"", 2, 36, 1, 28997775902017364105, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.925306578737203*^9, 3.9254751187803345`*^9, 
  3.925475619110732*^9, 3.925482033881031*^9},
 CellLabel->
  "During evaluation of \
In[36]:=",ExpressionUUID->"665ea7a2-8f85-4ce2-91e4-979326a088a8"],

Cell[BoxData["ComplexInfinity"], "Output",
 CellChangeTimes->{3.925306578760147*^9, 3.925475118880069*^9, 
  3.925475619160769*^9, 3.925482033932893*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"a2506d95-3891-46b4-b58f-2ed458680834"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1141.2, 579.6},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
PrintingCopies->1,
PrintingPageRange->{32000, 32000},
PrintingOptions->{"Magnification"->1.,
"PaperOrientation"->"Portrait",
"PaperSize"->{612, 792}},
TaggingRules-><|"TryRealOnly" -> False|>,
FrontEndVersion->"13.0 for Microsoft Windows (64-bit) (December 2, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"acdc341b-4ea6-47ba-b5fd-d13a963541a1"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 360, 8, 48, "Input",ExpressionUUID->"695ac5a5-6a53-43d7-a057-588ecde75d3e"],
Cell[CellGroupData[{
Cell[943, 32, 170, 3, 67, "Section",ExpressionUUID->"54efe981-f035-440b-a520-17ef66d1947f"],
Cell[1116, 37, 809, 18, 48, "Input",ExpressionUUID->"764ee7be-e0fd-43a0-b8ad-c15b819ddf83"],
Cell[1928, 57, 11705, 305, 396, "Input",ExpressionUUID->"f7225d3d-83bc-4258-8507-71b494b1bae4"],
Cell[13636, 364, 14385, 372, 403, "Input",ExpressionUUID->"90c8c492-c377-4a2b-8c26-a1f03303d30f"],
Cell[28024, 738, 17002, 407, 298, "Input",ExpressionUUID->"f43c6670-db8c-465a-8419-9b6d033d9626"],
Cell[45029, 1147, 8283, 200, 326, "Input",ExpressionUUID->"cead4098-dbda-4a89-84d1-6848a99889bd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[53349, 1352, 178, 3, 67, "Section",ExpressionUUID->"d25ab0ae-02d3-401d-ada7-dc4cc9dfe9be"],
Cell[53530, 1357, 1780, 35, 105, "Input",ExpressionUUID->"ff8fd6f0-e533-40d6-b5fb-fa35823d39f3"],
Cell[CellGroupData[{
Cell[55335, 1396, 11990, 269, 324, "Input",ExpressionUUID->"73a31c00-86d7-433c-8a3b-aef86e7cc2d1"],
Cell[67328, 1667, 6000, 192, 144, "Output",ExpressionUUID->"ffe75179-9dd4-4dd0-ab12-6be04622a95b"],
Cell[73331, 1861, 2149, 67, 51, "Output",ExpressionUUID->"d7c4b960-aebe-4a53-ab82-2d6392213b0a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[75517, 1933, 10361, 246, 282, "Input",ExpressionUUID->"92c5ab6e-271b-4508-8b4d-c35273670545"],
Cell[85881, 2181, 8417, 219, 133, "Output",ExpressionUUID->"fb5a8c1a-bc98-4f93-a5ca-f874691d3a0b"],
Cell[94301, 2402, 10811, 264, 216, "Output",ExpressionUUID->"56311e7f-43bc-4261-8099-425f3e0ccdf6"]
}, Open  ]],
Cell[105127, 2669, 146250, 2410, 591, "Text",ExpressionUUID->"d394d6ca-8dcf-44d7-ae7d-cbe96c3cbcb5"],
Cell[CellGroupData[{
Cell[251402, 5083, 659, 18, 28, "Input",ExpressionUUID->"2fc99b40-ef19-4700-b403-44a0aa6ed7e0"],
Cell[252064, 5103, 440, 10, 38, "Message",ExpressionUUID->"665ea7a2-8f85-4ce2-91e4-979326a088a8"],
Cell[252507, 5115, 232, 3, 32, "Output",ExpressionUUID->"a2506d95-3891-46b4-b58f-2ed458680834"]
}, Open  ]]
}, Open  ]]
}
]
*)

